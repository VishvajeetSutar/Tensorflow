{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP2op1EC63AxXGWIdxuZJLo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Introdcution to regression with neural network in tensorflow :**\n","\n","* there are many definations regarding simple linear regression,but in our case\n","predicting numerical variable based on combination of other numerical variables"],"metadata":{"id":"UGPKIX9BKaHm"}},{"cell_type":"code","source":["#Import Tensoflow\n","import tensorflow as tf\n","print(tf.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3TpvKbCbSGAf","executionInfo":{"status":"ok","timestamp":1704113355721,"user_tz":-330,"elapsed":358,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"0554fab8-2169-4d57-c7b2-32f283404605"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["2.15.0\n"]}]},{"cell_type":"markdown","source":["**Creating data to view and fit**"],"metadata":{"id":"-xBE4oWdSwwN"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","#creating features\n","X=np.array([-7.0,-4.0,-1.0,2.0,4.0,5.0,8.0,11.0])\n","\n","#creating labels\n","Y=np.array([3.0,6.0,9.0,12.0,14.0,15.0,18.0,21.0])\n","\n","#visualize it\n","plt.scatter(X,Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"FKFMJgFxUJlx","executionInfo":{"status":"ok","timestamp":1704113357296,"user_tz":-330,"elapsed":700,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"fcef768f-91a6-45cc-df3f-d4d7bba0b65a"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x78fc762df160>"]},"metadata":{},"execution_count":5},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#linear realtionship\n","Y==X+10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nsXwYJpWVk3v","executionInfo":{"status":"ok","timestamp":1704113357296,"user_tz":-330,"elapsed":31,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"95106d9a-14a6-472a-f410-770df912aacc"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True,  True,  True,  True,  True,  True,  True,  True])"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["**Input And Output Shapes:**"],"metadata":{"id":"9dif4pUcVqIf"}},{"cell_type":"code","source":["#Create demo tensors or our housing price prediction example\n","house_info=np.array([\"bedroom\",\"bathroom\",\"garage\"])\n","predicted_price=np.array([\"985000\"])\n","house_info.shape,predicted_price.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iJplCRMzVz0J","executionInfo":{"status":"ok","timestamp":1704113357296,"user_tz":-330,"elapsed":28,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"8c84a084-5181-43ec-8921-dc7de0a13477"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((3,), (1,))"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#input ouput shapes are depend upon problem"],"metadata":{"id":"P5JcBLMrWBU8","executionInfo":{"status":"ok","timestamp":1704113357297,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["#lets create tensors of the numpy arrays\n","x=tf.constant(X,dtype=tf.float32)\n","y=tf.constant(Y,dtype=tf.float32)\n","x,y"],"metadata":{"id":"F2sxcpJZXo6x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704113357297,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"c59ee9fa-413f-4e6a-b7a9-3bb6239fcfaa"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float32, numpy=array([-7., -4., -1.,  2.,  4.,  5.,  8., 11.], dtype=float32)>,\n"," <tf.Tensor: shape=(8,), dtype=float32, numpy=array([ 3.,  6.,  9., 12., 14., 15., 18., 21.], dtype=float32)>)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["input_shape=x[0].shape\n","output_shape=y[0].shape\n","input_shape,output_shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_i9X6i2tfeJW","executionInfo":{"status":"ok","timestamp":1704113357297,"user_tz":-330,"elapsed":25,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"cd8db880-5605-4a68-fbf3-bfd1c86ceb04"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(TensorShape([]), TensorShape([]))"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["plt.scatter(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"BQ7ozVfUfrF1","executionInfo":{"status":"ok","timestamp":1704113358259,"user_tz":-330,"elapsed":985,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"8a637ed4-2a78-4a53-a4e2-636593530b16"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x78fc741f13c0>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## steps with modeling in tensorflow\n","* 1.creating a model- define the input and output layers as well as the hidden ayers of a deep learning model.\n","* 2.compling a model- define the loss function (in other words,the funtion which tells out model how wrong it is) and the optimizer(tells our model how to improve the patterns its learning) and evaluation metrics(whatwe can use to interpret the performance of our model).\n","* 3.fitting a model -letting the model try to find patterns between X and y(features and labels)."],"metadata":{"id":"959EzTKrf33l"}},{"cell_type":"code","source":["#set random seed\n","tf.random.set_seed(42)\n","\n","#1.create a model using the sequential API\n","model=tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)  # (1) as tensor we using have one input features and and 1 output feature\n","])\n","\n","#compile thw model\n","model.compile(loss=tf.keras.losses.mae, #mean absolute error\n","              optimizer=tf.keras.optimizers.SGD(),#sgd is for stochastic gradient desent\n","              metrics=['mae'])\n","\n","#3.fit the model\n","\n","model.fit(tf.expand_dims(x,axis=-1),y,epochs=5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L40fhn60gAQZ","executionInfo":{"status":"ok","timestamp":1704113358812,"user_tz":-330,"elapsed":604,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"5bc8e21d-ae9d-48ec-91dd-4017f6140d1a"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","1/1 [==============================] - 1s 515ms/step - loss: 17.5416 - mae: 17.5416\n","Epoch 2/5\n","1/1 [==============================] - 0s 11ms/step - loss: 17.3295 - mae: 17.3295\n","Epoch 3/5\n","1/1 [==============================] - 0s 9ms/step - loss: 17.1639 - mae: 17.1639\n","Epoch 4/5\n","1/1 [==============================] - 0s 11ms/step - loss: 16.9983 - mae: 16.9983\n","Epoch 5/5\n","1/1 [==============================] - 0s 10ms/step - loss: 16.8327 - mae: 16.8327\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc70fd9cc0>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["x,y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PVHEncQdkGEK","executionInfo":{"status":"ok","timestamp":1704113358813,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"815f1979-688d-4bbf-8ac9-cbf6177a37d2"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float32, numpy=array([-7., -4., -1.,  2.,  4.,  5.,  8., 11.], dtype=float32)>,\n"," <tf.Tensor: shape=(8,), dtype=float32, numpy=array([ 3.,  6.,  9., 12., 14., 15., 18., 21.], dtype=float32)>)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#try to make prediction on our model\n","y_pred=model.predict([17.0])\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"msfb-qgQrkZy","executionInfo":{"status":"ok","timestamp":1704113358813,"user_tz":-330,"elapsed":19,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"83a78e3a-ffeb-4dad-fd5d-4a1d72a2d868"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 88ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[-22.036448]], dtype=float32)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4u5J7m6tsCpz","executionInfo":{"status":"ok","timestamp":1704113358813,"user_tz":-330,"elapsed":16,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"f2eac642-6d4b-4a71-829e-e664a8a47874"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-22.036448]], dtype=float32)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["y_pred+11"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7HGdThuhztet","executionInfo":{"status":"ok","timestamp":1704113358813,"user_tz":-330,"elapsed":14,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"35146bec-b41c-4536-df6c-4c3342708232"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-11.036448]], dtype=float32)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["#**# improve pur model**:\n","\n","1. **Creating a model** - here you might want to add more layers, increase the number of hidden units (also called neurons) within each layer, change the activation functions of each layer.\n","2. **Compiling a model** - you might want to choose optimization function or perhaps change the **learning rate** of the optimization function.\n","3. **Fitting a model** - perhaps you could fit a model for more **epochs** (leave it training for longer) or on more data (give the model more examples to learn from)."],"metadata":{"id":"_a5Ma2zKsHAO"}},{"cell_type":"code","source":["#rebuild our model\n","\n","tf.random.set_seed(42)\n","\n","model=tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","model.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.keras.optimizers.SGD(),\n","              metrics=[\"mae\"]\n","            )\n","\n","#fit the model(this time we train longer)\n","model.fit(tf.expand_dims(x,axis=-1),y,epochs=100)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ugicMI5gxGz4","executionInfo":{"status":"ok","timestamp":1704113361803,"user_tz":-330,"elapsed":3002,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"c1b203dd-6ac4-49f8-ad07-7c988ee73464"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1/1 [==============================] - 0s 339ms/step - loss: 11.3024 - mae: 11.3024\n","Epoch 2/100\n","1/1 [==============================] - 0s 11ms/step - loss: 11.2418 - mae: 11.2418\n","Epoch 3/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.1811 - mae: 11.1811\n","Epoch 4/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.1205 - mae: 11.1205\n","Epoch 5/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.0599 - mae: 11.0599\n","Epoch 6/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.9993 - mae: 10.9993\n","Epoch 7/100\n","1/1 [==============================] - 0s 12ms/step - loss: 10.9386 - mae: 10.9386\n","Epoch 8/100\n","1/1 [==============================] - 0s 18ms/step - loss: 10.8780 - mae: 10.8780\n","Epoch 9/100\n","1/1 [==============================] - 0s 12ms/step - loss: 10.8174 - mae: 10.8174\n","Epoch 10/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.7568 - mae: 10.7568\n","Epoch 11/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.6961 - mae: 10.6961\n","Epoch 12/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.6355 - mae: 10.6355\n","Epoch 13/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.5749 - mae: 10.5749\n","Epoch 14/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.5143 - mae: 10.5143\n","Epoch 15/100\n","1/1 [==============================] - 0s 12ms/step - loss: 10.4536 - mae: 10.4536\n","Epoch 16/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.3930 - mae: 10.3930\n","Epoch 17/100\n","1/1 [==============================] - 0s 12ms/step - loss: 10.3324 - mae: 10.3324\n","Epoch 18/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.2718 - mae: 10.2718\n","Epoch 19/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.2111 - mae: 10.2111\n","Epoch 20/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.1505 - mae: 10.1505\n","Epoch 21/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.0899 - mae: 10.0899\n","Epoch 22/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.0293 - mae: 10.0293\n","Epoch 23/100\n","1/1 [==============================] - 0s 12ms/step - loss: 9.9686 - mae: 9.9686\n","Epoch 24/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.9080 - mae: 9.9080\n","Epoch 25/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.8474 - mae: 9.8474\n","Epoch 26/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.7868 - mae: 9.7868\n","Epoch 27/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.7261 - mae: 9.7261\n","Epoch 28/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.6655 - mae: 9.6655\n","Epoch 29/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.6049 - mae: 9.6049\n","Epoch 30/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.5443 - mae: 9.5443\n","Epoch 31/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.4836 - mae: 9.4836\n","Epoch 32/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.4230 - mae: 9.4230\n","Epoch 33/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.3624 - mae: 9.3624\n","Epoch 34/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.3018 - mae: 9.3018\n","Epoch 35/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.2411 - mae: 9.2411\n","Epoch 36/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.1805 - mae: 9.1805\n","Epoch 37/100\n","1/1 [==============================] - 0s 17ms/step - loss: 9.1199 - mae: 9.1199\n","Epoch 38/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.0593 - mae: 9.0593\n","Epoch 39/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.9986 - mae: 8.9986\n","Epoch 40/100\n","1/1 [==============================] - 0s 8ms/step - loss: 8.9380 - mae: 8.9380\n","Epoch 41/100\n","1/1 [==============================] - 0s 15ms/step - loss: 8.8774 - mae: 8.8774\n","Epoch 42/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.8168 - mae: 8.8168\n","Epoch 43/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.7561 - mae: 8.7561\n","Epoch 44/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.6955 - mae: 8.6955\n","Epoch 45/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.6349 - mae: 8.6349\n","Epoch 46/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.5743 - mae: 8.5743\n","Epoch 47/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.5136 - mae: 8.5136\n","Epoch 48/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.4530 - mae: 8.4530\n","Epoch 49/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.3924 - mae: 8.3924\n","Epoch 50/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.3318 - mae: 8.3318\n","Epoch 51/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.2711 - mae: 8.2711\n","Epoch 52/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.2105 - mae: 8.2105\n","Epoch 53/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.1499 - mae: 8.1499\n","Epoch 54/100\n","1/1 [==============================] - 0s 14ms/step - loss: 8.0893 - mae: 8.0893\n","Epoch 55/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.0286 - mae: 8.0286\n","Epoch 56/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.9680 - mae: 7.9680\n","Epoch 57/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.9074 - mae: 7.9074\n","Epoch 58/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.8468 - mae: 7.8468\n","Epoch 59/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.7861 - mae: 7.7861\n","Epoch 60/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.7255 - mae: 7.7255\n","Epoch 61/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.6649 - mae: 7.6649\n","Epoch 62/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.6043 - mae: 7.6043\n","Epoch 63/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.5436 - mae: 7.5436\n","Epoch 64/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.4830 - mae: 7.4830\n","Epoch 65/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4506 - mae: 7.4506\n","Epoch 66/100\n","1/1 [==============================] - 0s 15ms/step - loss: 7.4425 - mae: 7.4425\n","Epoch 67/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4343 - mae: 7.4343\n","Epoch 68/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4336 - mae: 7.4336\n","Epoch 69/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4300 - mae: 7.4300\n","Epoch 70/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4218 - mae: 7.4218\n","Epoch 71/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.4137 - mae: 7.4137\n","Epoch 72/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4056 - mae: 7.4056\n","Epoch 73/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.3975 - mae: 7.3975\n","Epoch 74/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3918 - mae: 7.3918\n","Epoch 75/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3931 - mae: 7.3931\n","Epoch 76/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3850 - mae: 7.3850\n","Epoch 77/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.3768 - mae: 7.3768\n","Epoch 78/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3687 - mae: 7.3687\n","Epoch 79/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3606 - mae: 7.3606\n","Epoch 80/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3525 - mae: 7.3525\n","Epoch 81/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.3536 - mae: 7.3536\n","Epoch 82/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3481 - mae: 7.3481\n","Epoch 83/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3400 - mae: 7.3400\n","Epoch 84/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3318 - mae: 7.3318\n","Epoch 85/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.3237 - mae: 7.3237\n","Epoch 86/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.3156 - mae: 7.3156\n","Epoch 87/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3118 - mae: 7.3118\n","Epoch 88/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3112 - mae: 7.3112\n","Epoch 89/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3031 - mae: 7.3031\n","Epoch 90/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2950 - mae: 7.2950\n","Epoch 91/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.2868 - mae: 7.2868\n","Epoch 92/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.2787 - mae: 7.2787\n","Epoch 93/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2706 - mae: 7.2706\n","Epoch 94/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.2736 - mae: 7.2736\n","Epoch 95/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2662 - mae: 7.2662\n","Epoch 96/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2581 - mae: 7.2581\n","Epoch 97/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2500 - mae: 7.2500\n","Epoch 98/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2418 - mae: 7.2418\n","Epoch 99/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.2337 - mae: 7.2337\n","Epoch 100/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2318 - mae: 7.2318\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc70603bb0>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["y_pred=model.predict([17.0]) #model improved\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Do3cThiLy_J_","executionInfo":{"status":"ok","timestamp":1704113361804,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"741ede90-036d-416e-bd94-c775a2bbecb1"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 65ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[32.30974]], dtype=float32)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["#IMPROVEMENT 2nd way\n","#this time we try to imrpove model by incrasing hidden layers:\n","\n","tf.random.set_seed(42)\n","\n","#1.create a model(extra hidden layers with 100 units)\n","model=tf.keras.Sequential([\n","    tf.keras.layers.Dense(50,activation=None), #100,\"relu\"\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model\n","model.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.keras.optimizers.Adam(lr=0.01),\n","              metrics=[\"mae\"]\n","            )\n","\n","#fit the model(this time we train longer)\n","model.fit(tf.expand_dims(x,axis=-1),y,epochs=100)\n","\n","\n","#ways:\n","'''\n","adding layers\n","increase no.of hidden layers(units),\n","change activation function\n","change optimizers,change learning rate(is main parameter in many deep learning model)\n","change echos\n","   '''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7N7Zb7S-0v-m","executionInfo":{"status":"ok","timestamp":1704113365289,"user_tz":-330,"elapsed":3501,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"61ba8943-25ef-4344-8591-ef7f88f915b6"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1/1 [==============================] - 1s 811ms/step - loss: 12.3732 - mae: 12.3732\n","Epoch 2/100\n","1/1 [==============================] - 0s 10ms/step - loss: 12.3258 - mae: 12.3258\n","Epoch 3/100\n","1/1 [==============================] - 0s 10ms/step - loss: 12.2785 - mae: 12.2785\n","Epoch 4/100\n","1/1 [==============================] - 0s 16ms/step - loss: 12.2311 - mae: 12.2311\n","Epoch 5/100\n","1/1 [==============================] - 0s 9ms/step - loss: 12.1838 - mae: 12.1838\n","Epoch 6/100\n","1/1 [==============================] - 0s 9ms/step - loss: 12.1365 - mae: 12.1365\n","Epoch 7/100\n","1/1 [==============================] - 0s 9ms/step - loss: 12.0892 - mae: 12.0892\n","Epoch 8/100\n","1/1 [==============================] - 0s 17ms/step - loss: 12.0418 - mae: 12.0418\n","Epoch 9/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.9945 - mae: 11.9945\n","Epoch 10/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.9472 - mae: 11.9472\n","Epoch 11/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.8999 - mae: 11.8999\n","Epoch 12/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.8525 - mae: 11.8525\n","Epoch 13/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.8052 - mae: 11.8052\n","Epoch 14/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.7578 - mae: 11.7578\n","Epoch 15/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.7104 - mae: 11.7104\n","Epoch 16/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.6630 - mae: 11.6630\n","Epoch 17/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.6155 - mae: 11.6155\n","Epoch 18/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.5681 - mae: 11.5681\n","Epoch 19/100\n","1/1 [==============================] - 0s 12ms/step - loss: 11.5205 - mae: 11.5205\n","Epoch 20/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.4730 - mae: 11.4730\n","Epoch 21/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.4254 - mae: 11.4254\n","Epoch 22/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.3777 - mae: 11.3777\n","Epoch 23/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.3300 - mae: 11.3300\n","Epoch 24/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.2822 - mae: 11.2822\n","Epoch 25/100\n","1/1 [==============================] - 0s 13ms/step - loss: 11.2343 - mae: 11.2343\n","Epoch 26/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.1863 - mae: 11.1863\n","Epoch 27/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.1383 - mae: 11.1383\n","Epoch 28/100\n","1/1 [==============================] - 0s 9ms/step - loss: 11.0902 - mae: 11.0902\n","Epoch 29/100\n","1/1 [==============================] - 0s 10ms/step - loss: 11.0419 - mae: 11.0419\n","Epoch 30/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.9936 - mae: 10.9936\n","Epoch 31/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.9451 - mae: 10.9451\n","Epoch 32/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.8966 - mae: 10.8966\n","Epoch 33/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.8479 - mae: 10.8479\n","Epoch 34/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.7991 - mae: 10.7991\n","Epoch 35/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.7501 - mae: 10.7501\n","Epoch 36/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.7010 - mae: 10.7010\n","Epoch 37/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.6518 - mae: 10.6518\n","Epoch 38/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.6024 - mae: 10.6024\n","Epoch 39/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.5528 - mae: 10.5528\n","Epoch 40/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.5031 - mae: 10.5031\n","Epoch 41/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.4531 - mae: 10.4531\n","Epoch 42/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.4031 - mae: 10.4031\n","Epoch 43/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.3528 - mae: 10.3528\n","Epoch 44/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.3023 - mae: 10.3023\n","Epoch 45/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.2517 - mae: 10.2517\n","Epoch 46/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.2008 - mae: 10.2008\n","Epoch 47/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.1498 - mae: 10.1498\n","Epoch 48/100\n","1/1 [==============================] - 0s 14ms/step - loss: 10.0985 - mae: 10.0985\n","Epoch 49/100\n","1/1 [==============================] - 0s 11ms/step - loss: 10.0470 - mae: 10.0470\n","Epoch 50/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.9953 - mae: 9.9953\n","Epoch 51/100\n","1/1 [==============================] - 0s 15ms/step - loss: 9.9434 - mae: 9.9434\n","Epoch 52/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.8912 - mae: 9.8912\n","Epoch 53/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.8389 - mae: 9.8389\n","Epoch 54/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.7862 - mae: 9.7862\n","Epoch 55/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.7333 - mae: 9.7333\n","Epoch 56/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.6802 - mae: 9.6802\n","Epoch 57/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.6268 - mae: 9.6268\n","Epoch 58/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.5732 - mae: 9.5732\n","Epoch 59/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.5193 - mae: 9.5193\n","Epoch 60/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.4651 - mae: 9.4651\n","Epoch 61/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.4106 - mae: 9.4106\n","Epoch 62/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.3559 - mae: 9.3559\n","Epoch 63/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.3009 - mae: 9.3009\n","Epoch 64/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.2456 - mae: 9.2456\n","Epoch 65/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.1900 - mae: 9.1900\n","Epoch 66/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.1341 - mae: 9.1341\n","Epoch 67/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.0779 - mae: 9.0779\n","Epoch 68/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.0214 - mae: 9.0214\n","Epoch 69/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.9646 - mae: 8.9646\n","Epoch 70/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.9075 - mae: 8.9075\n","Epoch 71/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.8500 - mae: 8.8500\n","Epoch 72/100\n","1/1 [==============================] - 0s 11ms/step - loss: 8.7923 - mae: 8.7923\n","Epoch 73/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.7342 - mae: 8.7342\n","Epoch 74/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.6758 - mae: 8.6758\n","Epoch 75/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.6171 - mae: 8.6171\n","Epoch 76/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.5580 - mae: 8.5580\n","Epoch 77/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.4986 - mae: 8.4986\n","Epoch 78/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.4389 - mae: 8.4389\n","Epoch 79/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.3788 - mae: 8.3788\n","Epoch 80/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.3183 - mae: 8.3183\n","Epoch 81/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.2575 - mae: 8.2575\n","Epoch 82/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.1963 - mae: 8.1963\n","Epoch 83/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.1348 - mae: 8.1348\n","Epoch 84/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.0729 - mae: 8.0729\n","Epoch 85/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.0107 - mae: 8.0107\n","Epoch 86/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.9480 - mae: 7.9480\n","Epoch 87/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.8850 - mae: 7.8850\n","Epoch 88/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.8216 - mae: 7.8216\n","Epoch 89/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.7579 - mae: 7.7579\n","Epoch 90/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.6937 - mae: 7.6937\n","Epoch 91/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.6292 - mae: 7.6292\n","Epoch 92/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.5643 - mae: 7.5643\n","Epoch 93/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.4989 - mae: 7.4989\n","Epoch 94/100\n","1/1 [==============================] - 0s 18ms/step - loss: 7.4332 - mae: 7.4332\n","Epoch 95/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.3671 - mae: 7.3671\n","Epoch 96/100\n","1/1 [==============================] - 0s 13ms/step - loss: 7.3005 - mae: 7.3005\n","Epoch 97/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2336 - mae: 7.2336\n","Epoch 98/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.1662 - mae: 7.1662\n","Epoch 99/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0985 - mae: 7.0985\n","Epoch 100/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0303 - mae: 7.0303\n"]},{"output_type":"execute_result","data":{"text/plain":["'\\nadding layers\\nincrease no.of hidden layers(units),\\nchange activation function\\nchange optimizers,change learning rate(is main parameter in many deep learning model)\\nchange echos\\n   '"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["model.predict([17])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qR8uJWXt2aDS","executionInfo":{"status":"ok","timestamp":1704113366004,"user_tz":-330,"elapsed":746,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"a6b8e395-c889-49f9-e87f-dd46a00244c6"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 122ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[32.197662]], dtype=float32)"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["# Evaluating model:\n","in practice ,a typical workflow you will go through when building neural network is:\n","\n","build a model-->fit it-->evaluate model-->tweak it ->fit_it-->evaluate_it-->\n","tweak it.........\n","\n","* visualizing the data is best way of evaluation:"],"metadata":{"id":"PkVnSZFj8dN5"}},{"cell_type":"code","source":["#creating the bigger data set\n","X=tf.range(-100,100,4)\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WLTxM0xL5sqw","executionInfo":{"status":"ok","timestamp":1704113366005,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"bb9a2ed6-48b6-4e75-f156-969a48dc30a8"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(50,), dtype=int32, numpy=\n","array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n","        -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n","        -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n","         32,   36,   40,   44,   48,   52,   56,   60,   64,   68,   72,\n","         76,   80,   84,   88,   92,   96], dtype=int32)>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["#Make labels fro dataset\n","Y=(X+10)\n","Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OIo6yoMr59ie","executionInfo":{"status":"ok","timestamp":1704113366005,"user_tz":-330,"elapsed":25,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"5152e0c3-3152-401c-b435-da8e975bb4b0"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(50,), dtype=int32, numpy=\n","array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n","       -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n","        14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n","        66,  70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["#visualize the data\n","\n","import matplotlib.pyplot as plt\n","plt.scatter(X,Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"RxcvPswC6CZ8","executionInfo":{"status":"ok","timestamp":1704113366006,"user_tz":-330,"elapsed":25,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"7b025321-3cbc-4b4b-de5b-ceddf06dfff1"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x78fc71923400>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### 3 Sets:\n","\n"," **Train set** : trainning data 70 to 80%\n","\n","**Validation set**: tuning the model 10 to 15%\n","\n"," **test set**: evaluating the model\n","\n"],"metadata":{"id":"tng4JGnj9ePo"}},{"cell_type":"code","source":["#check the lenth of the data\n","len(X)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U5fDe8wW6akW","executionInfo":{"status":"ok","timestamp":1704113366006,"user_tz":-330,"elapsed":22,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"7e502c1b-2fe6-4a08-95f7-3ff042ccff63"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["50"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["#spilting the data set into trainng and test dataset:\n","x_train=X[:40]\n","x_test=X[40:]\n","\n","y_train=Y[:40]\n","y_test=Y[40:]\n","\n","len(x_train) ,len(x_test),len(y_train),len(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a9go5_Ay_U_X","executionInfo":{"status":"ok","timestamp":1704113366006,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"3dfa1e75-827a-497a-b449-1df5bda09fe6"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(40, 10, 40, 10)"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["#visualizing the data:\n"],"metadata":{"id":"dG9A089WACLD"}},{"cell_type":"code","source":["plt.figure(figsize=(10,7))\n","\n","#visualizing the trainning data :\n","plt.scatter(x_train,y_train,color=\"green\",label=\"Trainnig data\")\n","#visualizing the testing data\n","plt.scatter(x_test,y_test,color=\"red\",label=\"Testing data\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"2SUgJntDAxyP","executionInfo":{"status":"ok","timestamp":1704113366972,"user_tz":-330,"elapsed":985,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"b4fb19cd-9894-45b1-ef41-3b02153306e1"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#creating the model\n","model=tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#comiple model\n","model.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.optimizers.SGD(),\n","              metrics=[\"mae\"])\n","\n","#fitting the model\n","#model.fit(x_train,y_train.epochs=100)"],"metadata":{"id":"imHh7WqkBsxb","executionInfo":{"status":"ok","timestamp":1704113366973,"user_tz":-330,"elapsed":41,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"YNzqVedYHHOz","executionInfo":{"status":"error","timestamp":1704113366973,"user_tz":-330,"elapsed":41,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"914b03b2-903a-470e-ccf0-1afd91f20370"},"execution_count":28,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-28-5f15418b3570>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\u001b[0m in \u001b[0;36msummary\u001b[0;34m(self, line_length, positions, print_fn, expand_nested, show_trainable, layer_range)\u001b[0m\n\u001b[1;32m   3504\u001b[0m         \"\"\"\n\u001b[1;32m   3505\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuilt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3506\u001b[0;31m             raise ValueError(\n\u001b[0m\u001b[1;32m   3507\u001b[0m                 \u001b[0;34m\"This model has not yet been built. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3508\u001b[0m                 \u001b[0;34m\"Build the model first by calling `build()` or by calling \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: This model has not yet been built. Build the model first by calling `build()` or by calling the model on a batch of data."]}]},{"cell_type":"code","source":["x_train[0].shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1sxOUtVGHhQG","executionInfo":{"status":"ok","timestamp":1704113379080,"user_tz":-330,"elapsed":395,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"6ce4ab2d-a111-4265-ff3e-514a3141f67a"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["TensorShape([])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["tf.random.set_seed(42)\n","#1.lets create the model by taking input shape in dense layer (input_shape)\n","\n","model=tf.keras.Sequential([\n","    tf.keras.layers.Dense(10,input_shape=[1],name=\"input_layer\"), #we also can name the layers this is required when we have large data\n","    tf.keras.layers.Dense(1,input_shape=[1],name=\"output_layer\")\n","],name=\"model_1\")\n","\n","#2.compile the model\n","model.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.optimizers.SGD(),\n","              metrics=[\"mae\"])\n","\n","#model.build()"],"metadata":{"id":"dUU22H_fHLo2","executionInfo":{"status":"ok","timestamp":1704113380596,"user_tz":-330,"elapsed":879,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vul-IIOlH7F_","executionInfo":{"status":"ok","timestamp":1704113380596,"user_tz":-330,"elapsed":16,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"9b62a030-eeff-41b3-89a4-670cd5580d4e"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_layer (Dense)         (None, 10)                20        \n","                                                                 \n"," output_layer (Dense)        (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["#lets fit the model\n","model.fit(x_train,y_train,epochs=100,verbose=0) #defult 1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UXlm-leUH_A4","executionInfo":{"status":"ok","timestamp":1704113381385,"user_tz":-330,"elapsed":797,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"b80a757a-571c-420e-dc7b-ea6605532fcb"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc711f7490>"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["from tensorflow.keras.utils import plot_model\n","plot_model(model=model,show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"cA4nZXo3Ieat","executionInfo":{"status":"ok","timestamp":1704113381386,"user_tz":-330,"elapsed":30,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"2302c87c-b082-47fb-878c-2271d5cf9c8c"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#lets make predictions\n","y_pred=model.predict(x_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dmUxJ-BjOykL","executionInfo":{"status":"ok","timestamp":1704113381386,"user_tz":-330,"elapsed":28,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"3cdfdce5-8aed-4e72-aa2d-6f4253f7b061"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 50ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[34.868454],\n","       [37.096752],\n","       [39.325054],\n","       [41.553356],\n","       [43.78166 ],\n","       [46.009956],\n","       [48.23826 ],\n","       [50.466557],\n","       [52.69486 ],\n","       [54.92316 ]], dtype=float32)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IbaZkF0ZO-qT","executionInfo":{"status":"ok","timestamp":1704113381386,"user_tz":-330,"elapsed":24,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"a21bfe99-1a10-4cc1-d4f4-bbb35269f61f"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["#visualizing the model by defining the function:\n","\n","def plot_predictions(train_data=x_train,\n","                     train_labels=y_train,\n","                     test_data=x_test,\n","                     test_labels=y_test,\n","                     predictions=y_pred):\n","\n","  plt.figure(figsize=(10,7))\n","  #plotting the tranning data\n","  plt.scatter(train_data,train_labels,c=\"b\",label=\"Trainning data\")\n","  #plotting the testing data\n","  plt.scatter(test_data,test_labels,c=\"g\",label=\"Testing data\")\n","  #plotting predictions\n","  plt.scatter(test_data,predictions,c=\"r\",label=\"predictions\")\n","  plt.legend()\n","  plt.show()"],"metadata":{"id":"H3dLHn2BPBwZ","executionInfo":{"status":"ok","timestamp":1704113382486,"user_tz":-330,"elapsed":1122,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["plot_predictions(x_train,y_train,x_test,y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"7IluVaqTQpqM","executionInfo":{"status":"ok","timestamp":1704113382487,"user_tz":-330,"elapsed":57,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"93571333-e03a-475b-bf89-860bd43c99e7"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Evaluating our model's predictions using the regression evaluation metrics:\n","\n","* means absolute error\n","* mean square error"],"metadata":{"id":"Fx5r5oSEyACY"}},{"cell_type":"code","source":["#Evaluate model on the test data\n","model.evaluate(x_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BbRJxakky09c","executionInfo":{"status":"ok","timestamp":1704113382487,"user_tz":-330,"elapsed":54,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"553ee526-6885-4d61-de7e-8ca989acd36e"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 161ms/step - loss: 43.1042 - mae: 43.1042\n"]},{"output_type":"execute_result","data":{"text/plain":["[43.10419464111328, 43.10419464111328]"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["#Calculating the mean absolute error:\n","tf.metrics.mean_absolute_error(y_test,tf.constant(y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YCkxM1tZzQ-j","executionInfo":{"status":"ok","timestamp":1704113382487,"user_tz":-330,"elapsed":46,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"696ef091-31d1-4277-ac6b-c91e7563c975"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=float32, numpy=\n","array([53.131542, 50.903248, 48.674946, 46.446644, 44.21834 , 41.990044,\n","       39.76174 , 37.533443, 35.30514 , 33.07684 ], dtype=float32)>"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["tf.constant(y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"92Ks7W-W14yP","executionInfo":{"status":"ok","timestamp":1704113382487,"user_tz":-330,"elapsed":43,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"c641eed5-a1db-4a2d-b01c-96b5bc16aa2d"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10, 1), dtype=float32, numpy=\n","array([[34.868454],\n","       [37.096752],\n","       [39.325054],\n","       [41.553356],\n","       [43.78166 ],\n","       [46.009956],\n","       [48.23826 ],\n","       [50.466557],\n","       [52.69486 ],\n","       [54.92316 ]], dtype=float32)>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"guO5ewVn2LjH","executionInfo":{"status":"ok","timestamp":1704113382487,"user_tz":-330,"elapsed":40,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"b3e15ef9-6c8f-4ece-851a-c22f6df6e5b6"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["tf.squeeze(y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"heWjkHxa2MrE","executionInfo":{"status":"ok","timestamp":1704113382488,"user_tz":-330,"elapsed":39,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"cd254855-4967-4b82-f5fd-1b1ddbad98d8"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=float32, numpy=\n","array([34.868454, 37.096752, 39.325054, 41.553356, 43.78166 , 46.009956,\n","       48.23826 , 50.466557, 52.69486 , 54.92316 ], dtype=float32)>"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["#calculatin mean absolute error now:\n","Mae=tf.metrics.mean_absolute_error(y_test,tf.squeeze(y_pred))\n","Mae"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g1rLE_kJ2rJY","executionInfo":{"status":"ok","timestamp":1704113382488,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"37c340ec-6a11-4d36-aafe-42ad7cc005de"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=float32, numpy=43.104195>"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sAjnp_Wq42ls","executionInfo":{"status":"ok","timestamp":1704113382488,"user_tz":-330,"elapsed":34,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"59cac4ea-db0a-41a1-e81f-dcf19b3e49f8"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[34.868454],\n","       [37.096752],\n","       [39.325054],\n","       [41.553356],\n","       [43.78166 ],\n","       [46.009956],\n","       [48.23826 ],\n","       [50.466557],\n","       [52.69486 ],\n","       [54.92316 ]], dtype=float32)"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["y_pred=tf.constant(y_pred)\n","y_pred=tf.squeeze(y_pred)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ySy4sxYF4f9Z","executionInfo":{"status":"ok","timestamp":1704113382488,"user_tz":-330,"elapsed":33,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"c412894e-5afd-494a-fc7d-b69332d8b0a8"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=float32, numpy=\n","array([34.868454, 37.096752, 39.325054, 41.553356, 43.78166 , 46.009956,\n","       48.23826 , 50.466557, 52.69486 , 54.92316 ], dtype=float32)>"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["#calculating the mean squared error:\n","mse=tf.metrics.mean_squared_error(y_test,y_pred)\n","mse"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pQAhJPnb32Jh","executionInfo":{"status":"ok","timestamp":1704113382488,"user_tz":-330,"elapsed":31,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"cd748afb-3a56-4465-f786-ee2079d1049b"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=float32, numpy=1883.8676>"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["#defining the function to calculate mae and mse\n","def MAE(y_test,y_pred):\n","  return tf.metrics.mean_absolute_error(y_test,tf.squeeze(y_pred))\n","\n","def MSE(y_test,y_pred):\n","  return  tf.metrics.mean_squared_error(y_test,tf.squeeze(y_pred))\n"],"metadata":{"id":"reubGsJzAkuf","executionInfo":{"status":"ok","timestamp":1704113382488,"user_tz":-330,"elapsed":29,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":47,"outputs":[]},{"cell_type":"markdown","source":["# Expermenting the model to improve it:\n","* build different models with changing values:"],"metadata":{"id":"tvLNvIlt96CH"}},{"cell_type":"markdown","source":["*Build model_1:*"],"metadata":{"id":"c9GtzoNL_v3l"}},{"cell_type":"code","source":["tf.random.set_seed(42)\n","\n","#1.create the model_1\n","model_1=tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model:\n","model_1.compile(loss=tf.keras.losses.mae,\n","                optimizer=tf.keras.optimizers.SGD(),\n","                metrics=[\"mae\"])\n","\n","#3.fit the model\n","model_1.fit(tf.expand_dims(x_train,axis=-1),y_train,epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7afvZCOBY2S","executionInfo":{"status":"ok","timestamp":1704113385101,"user_tz":-330,"elapsed":2642,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"3dbbd602-d9ad-4e68-e86d-828ee643cf37"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","2/2 [==============================] - 0s 10ms/step - loss: 82.4929 - mae: 82.4929\n","Epoch 2/100\n","2/2 [==============================] - 0s 8ms/step - loss: 47.0899 - mae: 47.0899\n","Epoch 3/100\n","2/2 [==============================] - 0s 11ms/step - loss: 13.2479 - mae: 13.2479\n","Epoch 4/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.5856 - mae: 7.5856\n","Epoch 5/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.0657 - mae: 12.0657\n","Epoch 6/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3393 - mae: 9.3393\n","Epoch 7/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.4974 - mae: 8.4974\n","Epoch 8/100\n","2/2 [==============================] - 0s 9ms/step - loss: 9.0599 - mae: 9.0599\n","Epoch 9/100\n","2/2 [==============================] - 0s 10ms/step - loss: 18.5263 - mae: 18.5263\n","Epoch 10/100\n","2/2 [==============================] - 0s 12ms/step - loss: 10.0051 - mae: 10.0051\n","Epoch 11/100\n","2/2 [==============================] - 0s 17ms/step - loss: 8.3694 - mae: 8.3694\n","Epoch 12/100\n","2/2 [==============================] - 0s 15ms/step - loss: 10.5810 - mae: 10.5810\n","Epoch 13/100\n","2/2 [==============================] - 0s 23ms/step - loss: 9.7789 - mae: 9.7789\n","Epoch 14/100\n","2/2 [==============================] - 0s 11ms/step - loss: 15.7669 - mae: 15.7669\n","Epoch 15/100\n","2/2 [==============================] - 0s 17ms/step - loss: 11.6263 - mae: 11.6263\n","Epoch 16/100\n","2/2 [==============================] - 0s 11ms/step - loss: 8.5009 - mae: 8.5009\n","Epoch 17/100\n","2/2 [==============================] - 0s 26ms/step - loss: 13.5207 - mae: 13.5207\n","Epoch 18/100\n","2/2 [==============================] - 0s 9ms/step - loss: 11.3144 - mae: 11.3144\n","Epoch 19/100\n","2/2 [==============================] - 0s 21ms/step - loss: 18.1393 - mae: 18.1393\n","Epoch 20/100\n","2/2 [==============================] - 0s 23ms/step - loss: 15.2723 - mae: 15.2723\n","Epoch 21/100\n","2/2 [==============================] - 0s 21ms/step - loss: 11.2131 - mae: 11.2131\n","Epoch 22/100\n","2/2 [==============================] - 0s 18ms/step - loss: 8.3584 - mae: 8.3584\n","Epoch 23/100\n","2/2 [==============================] - 0s 17ms/step - loss: 9.9600 - mae: 9.9600\n","Epoch 24/100\n","2/2 [==============================] - 0s 22ms/step - loss: 15.7944 - mae: 15.7944\n","Epoch 25/100\n","2/2 [==============================] - 0s 23ms/step - loss: 12.2231 - mae: 12.2231\n","Epoch 26/100\n","2/2 [==============================] - 0s 11ms/step - loss: 13.3637 - mae: 13.3637\n","Epoch 27/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.7893 - mae: 10.7893\n","Epoch 28/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.0661 - mae: 13.0661\n","Epoch 29/100\n","2/2 [==============================] - 0s 8ms/step - loss: 9.5646 - mae: 9.5646\n","Epoch 30/100\n","2/2 [==============================] - 0s 9ms/step - loss: 16.6757 - mae: 16.6757\n","Epoch 31/100\n","2/2 [==============================] - 0s 12ms/step - loss: 23.3569 - mae: 23.3569\n","Epoch 32/100\n","2/2 [==============================] - 0s 16ms/step - loss: 7.3844 - mae: 7.3844\n","Epoch 33/100\n","2/2 [==============================] - 0s 15ms/step - loss: 9.7893 - mae: 9.7893\n","Epoch 34/100\n","2/2 [==============================] - 0s 9ms/step - loss: 12.2000 - mae: 12.2000\n","Epoch 35/100\n","2/2 [==============================] - 0s 9ms/step - loss: 11.2343 - mae: 11.2343\n","Epoch 36/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.5086 - mae: 13.5086\n","Epoch 37/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.4302 - mae: 9.4302\n","Epoch 38/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.0785 - mae: 10.0785\n","Epoch 39/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.9598 - mae: 8.9598\n","Epoch 40/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5840 - mae: 9.5840\n","Epoch 41/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5377 - mae: 10.5377\n","Epoch 42/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5839 - mae: 10.5839\n","Epoch 43/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.5698 - mae: 7.5698\n","Epoch 44/100\n","2/2 [==============================] - 0s 7ms/step - loss: 18.6712 - mae: 18.6712\n","Epoch 45/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.5073 - mae: 14.5073\n","Epoch 46/100\n","2/2 [==============================] - 0s 8ms/step - loss: 9.2106 - mae: 9.2106\n","Epoch 47/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.6731 - mae: 9.6731\n","Epoch 48/100\n","2/2 [==============================] - 0s 10ms/step - loss: 11.4208 - mae: 11.4208\n","Epoch 49/100\n","2/2 [==============================] - 0s 13ms/step - loss: 8.2222 - mae: 8.2222\n","Epoch 50/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.2744 - mae: 10.2744\n","Epoch 51/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3609 - mae: 9.3609\n","Epoch 52/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.0009 - mae: 14.0009\n","Epoch 53/100\n","2/2 [==============================] - 0s 8ms/step - loss: 15.0863 - mae: 15.0863\n","Epoch 54/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.6747 - mae: 14.6747\n","Epoch 55/100\n","2/2 [==============================] - 0s 6ms/step - loss: 19.5213 - mae: 19.5213\n","Epoch 56/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.9367 - mae: 10.9367\n","Epoch 57/100\n","2/2 [==============================] - 0s 9ms/step - loss: 12.6631 - mae: 12.6631\n","Epoch 58/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.0991 - mae: 8.0991\n","Epoch 59/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.0567 - mae: 12.0567\n","Epoch 60/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.9278 - mae: 8.9278\n","Epoch 61/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3354 - mae: 10.3354\n","Epoch 62/100\n","2/2 [==============================] - 0s 8ms/step - loss: 9.4703 - mae: 9.4703\n","Epoch 63/100\n","2/2 [==============================] - 0s 9ms/step - loss: 8.2108 - mae: 8.2108\n","Epoch 64/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.6216 - mae: 12.6216\n","Epoch 65/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.7115 - mae: 10.7115\n","Epoch 66/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.3775 - mae: 15.3775\n","Epoch 67/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.8466 - mae: 9.8466\n","Epoch 68/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.6580 - mae: 8.6580\n","Epoch 69/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.2505 - mae: 13.2505\n","Epoch 70/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.8789 - mae: 7.8789\n","Epoch 71/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.4189 - mae: 11.4189\n","Epoch 72/100\n","2/2 [==============================] - 0s 8ms/step - loss: 9.5940 - mae: 9.5940\n","Epoch 73/100\n","2/2 [==============================] - 0s 9ms/step - loss: 11.7263 - mae: 11.7263\n","Epoch 74/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.6867 - mae: 10.6867\n","Epoch 75/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5965 - mae: 9.5965\n","Epoch 76/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.0489 - mae: 11.0489\n","Epoch 77/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.1359 - mae: 11.1359\n","Epoch 78/100\n","2/2 [==============================] - 0s 8ms/step - loss: 11.5575 - mae: 11.5575\n","Epoch 79/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.5630 - mae: 15.5630\n","Epoch 80/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.6338 - mae: 11.6338\n","Epoch 81/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.4262 - mae: 9.4262\n","Epoch 82/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6240 - mae: 12.6240\n","Epoch 83/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.2127 - mae: 8.2127\n","Epoch 84/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.5398 - mae: 7.5398\n","Epoch 85/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.7038 - mae: 9.7038\n","Epoch 86/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.7822 - mae: 8.7822\n","Epoch 87/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.3219 - mae: 12.3219\n","Epoch 88/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.9557 - mae: 10.9557\n","Epoch 89/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.8281 - mae: 7.8281\n","Epoch 90/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.9721 - mae: 10.9721\n","Epoch 91/100\n","2/2 [==============================] - 0s 6ms/step - loss: 6.7632 - mae: 6.7632\n","Epoch 92/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.1653 - mae: 10.1653\n","Epoch 93/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.6071 - mae: 7.6071\n","Epoch 94/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2386 - mae: 9.2386\n","Epoch 95/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.8140 - mae: 10.8140\n","Epoch 96/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.3372 - mae: 10.3372\n","Epoch 97/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.6735 - mae: 7.6735\n","Epoch 98/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.6122 - mae: 8.6122\n","Epoch 99/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3882 - mae: 9.3882\n","Epoch 100/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.8407 - mae: 8.8407\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc70f891b0>"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["#make and plot predictions for model_1:\n","\n","y_pred_1=model_1.predict(x_test)\n","plot_predictions(predictions=y_pred_1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":655},"id":"pwzd9W63Dyxt","executionInfo":{"status":"ok","timestamp":1704113386089,"user_tz":-330,"elapsed":1004,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"51fad075-02a1-4911-aa49-947403d3c4fd"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x78fc717faef0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 52ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["tf.constant(y_pred_1),tf.squeeze(y_pred_1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KxNPjjsIGuld","executionInfo":{"status":"ok","timestamp":1704113386091,"user_tz":-330,"elapsed":46,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"70a21f19-729e-45f6-96b9-499028470bad"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(10, 1), dtype=float32, numpy=\n"," array([[ 74.51965 ],\n","        [ 79.402084],\n","        [ 84.284515],\n","        [ 89.166954],\n","        [ 94.04939 ],\n","        [ 98.93182 ],\n","        [103.814255],\n","        [108.69669 ],\n","        [113.57913 ],\n","        [118.46156 ]], dtype=float32)>,\n"," <tf.Tensor: shape=(10,), dtype=float32, numpy=\n"," array([ 74.51965 ,  79.402084,  84.284515,  89.166954,  94.04939 ,\n","         98.93182 , 103.814255, 108.69669 , 113.57913 , 118.46156 ],\n","       dtype=float32)>)"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#calculate model_1 evaluation metrics:\n","mae_1=MAE(y_test,y_pred_1)\n","mse_1=MSE(y_test,y_pred_1)\n","mae_1,mse_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lrRH3I8xHF1Y","executionInfo":{"status":"ok","timestamp":1704113386092,"user_tz":-330,"elapsed":42,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"2769f216-3381-4df2-b275-2203e70cae8e"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=8.490606>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=78.5146>)"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["* **Build Model_2**:\n","*2 dense layers and epochs=100"],"metadata":{"id":"ny1l1FIRIGC0"}},{"cell_type":"code","source":["tf.random.set_seed(42)\n","#1.creating the model_2:\n","model_2=tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model_2:\n","model_2.compile(loss=tf.keras.losses.mae,\n","                optimizer=tf.keras.optimizers.SGD(),\n","                metrics=[\"mae\"])\n","\n","#3.fit the model_2:\n","model_2.fit(tf.expand_dims(x_train,axis=-1),y_train,epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wiE5xvd4JYj_","executionInfo":{"status":"ok","timestamp":1704113389069,"user_tz":-330,"elapsed":3015,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"24d7f88b-c22b-43d4-c916-08eac854cd02"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","2/2 [==============================] - 0s 11ms/step - loss: 12.9342 - mae: 12.9342\n","Epoch 2/100\n","2/2 [==============================] - 0s 9ms/step - loss: 19.1362 - mae: 19.1362\n","Epoch 3/100\n","2/2 [==============================] - 0s 8ms/step - loss: 19.2790 - mae: 19.2790\n","Epoch 4/100\n","2/2 [==============================] - 0s 8ms/step - loss: 13.9533 - mae: 13.9533\n","Epoch 5/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.5133 - mae: 15.5133\n","Epoch 6/100\n","2/2 [==============================] - 0s 10ms/step - loss: 12.3089 - mae: 12.3089\n","Epoch 7/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.5992 - mae: 11.5992\n","Epoch 8/100\n","2/2 [==============================] - 0s 8ms/step - loss: 12.0232 - mae: 12.0232\n","Epoch 9/100\n","2/2 [==============================] - 0s 7ms/step - loss: 37.5892 - mae: 37.5892\n","Epoch 10/100\n","2/2 [==============================] - 0s 7ms/step - loss: 25.2447 - mae: 25.2447\n","Epoch 11/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.2352 - mae: 10.2352\n","Epoch 12/100\n","2/2 [==============================] - 0s 7ms/step - loss: 25.4088 - mae: 25.4088\n","Epoch 13/100\n","2/2 [==============================] - 0s 9ms/step - loss: 16.8546 - mae: 16.8546\n","Epoch 14/100\n","2/2 [==============================] - 0s 6ms/step - loss: 25.6977 - mae: 25.6977\n","Epoch 15/100\n","2/2 [==============================] - 0s 6ms/step - loss: 17.5576 - mae: 17.5576\n","Epoch 16/100\n","2/2 [==============================] - 0s 11ms/step - loss: 10.0300 - mae: 10.0300\n","Epoch 17/100\n","2/2 [==============================] - 0s 9ms/step - loss: 18.5792 - mae: 18.5792\n","Epoch 18/100\n","2/2 [==============================] - 0s 8ms/step - loss: 11.7383 - mae: 11.7383\n","Epoch 19/100\n","2/2 [==============================] - 0s 6ms/step - loss: 16.4210 - mae: 16.4210\n","Epoch 20/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.2271 - mae: 8.2271\n","Epoch 21/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.4268 - mae: 14.4268\n","Epoch 22/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.8460 - mae: 12.8460\n","Epoch 23/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.4735 - mae: 15.4735\n","Epoch 24/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.2640 - mae: 15.2640\n","Epoch 25/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.3295 - mae: 14.3295\n","Epoch 26/100\n","2/2 [==============================] - 0s 7ms/step - loss: 19.3381 - mae: 19.3381\n","Epoch 27/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.4344 - mae: 11.4344\n","Epoch 28/100\n","2/2 [==============================] - 0s 8ms/step - loss: 29.1180 - mae: 29.1180\n","Epoch 29/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.2331 - mae: 9.2331\n","Epoch 30/100\n","2/2 [==============================] - 0s 7ms/step - loss: 29.8585 - mae: 29.8585\n","Epoch 31/100\n","2/2 [==============================] - 0s 7ms/step - loss: 54.1799 - mae: 54.1799\n","Epoch 32/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5567 - mae: 9.5567\n","Epoch 33/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.1506 - mae: 12.1506\n","Epoch 34/100\n","2/2 [==============================] - 0s 7ms/step - loss: 23.9395 - mae: 23.9395\n","Epoch 35/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6019 - mae: 12.6019\n","Epoch 36/100\n","2/2 [==============================] - 0s 8ms/step - loss: 21.5105 - mae: 21.5105\n","Epoch 37/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.3745 - mae: 11.3745\n","Epoch 38/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.4778 - mae: 13.4778\n","Epoch 39/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.7864 - mae: 10.7864\n","Epoch 40/100\n","2/2 [==============================] - 0s 7ms/step - loss: 16.6424 - mae: 16.6424\n","Epoch 41/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.9819 - mae: 10.9819\n","Epoch 42/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3067 - mae: 9.3067\n","Epoch 43/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5838 - mae: 9.5838\n","Epoch 44/100\n","2/2 [==============================] - 0s 7ms/step - loss: 28.1176 - mae: 28.1176\n","Epoch 45/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.2998 - mae: 11.2998\n","Epoch 46/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.1446 - mae: 14.1446\n","Epoch 47/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.4633 - mae: 13.4633\n","Epoch 48/100\n","2/2 [==============================] - 0s 7ms/step - loss: 17.2806 - mae: 17.2806\n","Epoch 49/100\n","2/2 [==============================] - 0s 9ms/step - loss: 9.5338 - mae: 9.5338\n","Epoch 50/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.7542 - mae: 13.7542\n","Epoch 51/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.5680 - mae: 11.5680\n","Epoch 52/100\n","2/2 [==============================] - 0s 7ms/step - loss: 30.4190 - mae: 30.4190\n","Epoch 53/100\n","2/2 [==============================] - 0s 6ms/step - loss: 14.2918 - mae: 14.2918\n","Epoch 54/100\n","2/2 [==============================] - 0s 8ms/step - loss: 23.8669 - mae: 23.8669\n","Epoch 55/100\n","2/2 [==============================] - 0s 7ms/step - loss: 23.0791 - mae: 23.0791\n","Epoch 56/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.8420 - mae: 10.8420\n","Epoch 57/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6925 - mae: 12.6925\n","Epoch 58/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5695 - mae: 9.5695\n","Epoch 59/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4738 - mae: 12.4738\n","Epoch 60/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.8866 - mae: 11.8866\n","Epoch 61/100\n","2/2 [==============================] - 0s 7ms/step - loss: 16.9713 - mae: 16.9713\n","Epoch 62/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3866 - mae: 10.3866\n","Epoch 63/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3418 - mae: 10.3418\n","Epoch 64/100\n","2/2 [==============================] - 0s 7ms/step - loss: 24.2089 - mae: 24.2089\n","Epoch 65/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5231 - mae: 10.5231\n","Epoch 66/100\n","2/2 [==============================] - 0s 7ms/step - loss: 21.2238 - mae: 21.2238\n","Epoch 67/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.5236 - mae: 10.5236\n","Epoch 68/100\n","2/2 [==============================] - 0s 8ms/step - loss: 14.3865 - mae: 14.3865\n","Epoch 69/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.6191 - mae: 10.6191\n","Epoch 70/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7064 - mae: 12.7064\n","Epoch 71/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.1385 - mae: 13.1385\n","Epoch 72/100\n","2/2 [==============================] - 0s 10ms/step - loss: 19.6727 - mae: 19.6727\n","Epoch 73/100\n","2/2 [==============================] - 0s 8ms/step - loss: 11.2006 - mae: 11.2006\n","Epoch 74/100\n","2/2 [==============================] - 0s 7ms/step - loss: 21.9759 - mae: 21.9759\n","Epoch 75/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.1799 - mae: 7.1799\n","Epoch 76/100\n","2/2 [==============================] - 0s 12ms/step - loss: 9.4065 - mae: 9.4065\n","Epoch 77/100\n","2/2 [==============================] - 0s 10ms/step - loss: 22.0160 - mae: 22.0160\n","Epoch 78/100\n","2/2 [==============================] - 0s 7ms/step - loss: 17.7599 - mae: 17.7599\n","Epoch 79/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.8996 - mae: 14.8996\n","Epoch 80/100\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2654 - mae: 25.2654\n","Epoch 81/100\n","2/2 [==============================] - 0s 12ms/step - loss: 10.9636 - mae: 10.9636\n","Epoch 82/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7135 - mae: 12.7135\n","Epoch 83/100\n","2/2 [==============================] - 0s 8ms/step - loss: 17.4718 - mae: 17.4718\n","Epoch 84/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2747 - mae: 7.2747\n","Epoch 85/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.0017 - mae: 15.0017\n","Epoch 86/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.3152 - mae: 15.3152\n","Epoch 87/100\n","2/2 [==============================] - 0s 7ms/step - loss: 19.1653 - mae: 19.1653\n","Epoch 88/100\n","2/2 [==============================] - 0s 7ms/step - loss: 29.6735 - mae: 29.6735\n","Epoch 89/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.1549 - mae: 10.1549\n","Epoch 90/100\n","2/2 [==============================] - 0s 7ms/step - loss: 21.4044 - mae: 21.4044\n","Epoch 91/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5454 - mae: 10.5454\n","Epoch 92/100\n","2/2 [==============================] - 0s 7ms/step - loss: 18.2929 - mae: 18.2929\n","Epoch 93/100\n","2/2 [==============================] - 0s 8ms/step - loss: 6.8116 - mae: 6.8116\n","Epoch 94/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.0537 - mae: 13.0537\n","Epoch 95/100\n","2/2 [==============================] - 0s 7ms/step - loss: 18.4927 - mae: 18.4927\n","Epoch 96/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3744 - mae: 10.3744\n","Epoch 97/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.4934 - mae: 14.4934\n","Epoch 98/100\n","2/2 [==============================] - 0s 7ms/step - loss: 6.5703 - mae: 6.5703\n","Epoch 99/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.5726 - mae: 12.5726\n","Epoch 100/100\n","2/2 [==============================] - 0s 6ms/step - loss: 19.3645 - mae: 19.3645\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc70cc1c60>"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["#make and plot predictions of model_2\n","y_pred_2=model_2.predict(x_test)\n","plot_predictions(predictions=y_pred_2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":655},"id":"VyNXGLGcLr37","executionInfo":{"status":"ok","timestamp":1704113389069,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"34970673-361a-46d1-d95f-393fbabc033e"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x78fc70ef2e60> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 51ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#calculate the evaluation metrics for model_2\n","MAE_2=MAE(y_test,y_pred_2)\n","MSE_2=MSE(y_test,y_pred_2)\n","MAE_2,MSE_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bc7d1-0RMJNM","executionInfo":{"status":"ok","timestamp":1704113389069,"user_tz":-330,"elapsed":22,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"311201e9-8d57-4dea-9001-ab1db68ce5a8"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=13.547598>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=193.8053>)"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["* **Build model_3**:\n","*2 dense layers and epochs=500"],"metadata":{"id":"BwkkF-20M7KJ"}},{"cell_type":"code","source":["tf.random.set_seed(42)\n","#1.creating the model_2:\n","model_3=tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model_2:\n","model_3.compile(loss=tf.keras.losses.mae,\n","                optimizer=tf.keras.optimizers.SGD(),\n","                metrics=[\"mae\"])\n","\n","#3.fit the model_2:\n","model_3.fit(tf.expand_dims(x_train,axis=-1),y_train,epochs=500)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SeNGN-KWNCNx","executionInfo":{"status":"ok","timestamp":1704113402597,"user_tz":-330,"elapsed":13547,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"754f9e87-b3a0-4ef3-c800-35ede0d47dcf"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","2/2 [==============================] - 0s 10ms/step - loss: 41.8923 - mae: 41.8923\n","Epoch 2/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.8199 - mae: 24.8199\n","Epoch 3/500\n","2/2 [==============================] - 0s 7ms/step - loss: 29.4830 - mae: 29.4830\n","Epoch 4/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7235 - mae: 12.7235\n","Epoch 5/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.7393 - mae: 15.7393\n","Epoch 6/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4798 - mae: 12.4798\n","Epoch 7/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.7535 - mae: 11.7535\n","Epoch 8/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.1260 - mae: 12.1260\n","Epoch 9/500\n","2/2 [==============================] - 0s 6ms/step - loss: 38.1624 - mae: 38.1624\n","Epoch 10/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.7248 - mae: 25.7248\n","Epoch 11/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.2446 - mae: 10.2446\n","Epoch 12/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2589 - mae: 25.2589\n","Epoch 13/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.0920 - mae: 17.0920\n","Epoch 14/500\n","2/2 [==============================] - 0s 7ms/step - loss: 26.1185 - mae: 26.1185\n","Epoch 15/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.1517 - mae: 18.1517\n","Epoch 16/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8514 - mae: 7.8514\n","Epoch 17/500\n","2/2 [==============================] - 0s 10ms/step - loss: 22.2672 - mae: 22.2672\n","Epoch 18/500\n","2/2 [==============================] - 0s 10ms/step - loss: 10.8333 - mae: 10.8333\n","Epoch 19/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.7229 - mae: 10.7229\n","Epoch 20/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.0457 - mae: 12.0457\n","Epoch 21/500\n","2/2 [==============================] - 0s 9ms/step - loss: 20.1897 - mae: 20.1897\n","Epoch 22/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.8023 - mae: 13.8023\n","Epoch 23/500\n","2/2 [==============================] - 0s 11ms/step - loss: 9.5415 - mae: 9.5415\n","Epoch 24/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.8991 - mae: 11.8991\n","Epoch 25/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.2415 - mae: 16.2415\n","Epoch 26/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.4292 - mae: 16.4292\n","Epoch 27/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.5878 - mae: 11.5878\n","Epoch 28/500\n","2/2 [==============================] - 0s 10ms/step - loss: 30.0536 - mae: 30.0536\n","Epoch 29/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.2433 - mae: 9.2433\n","Epoch 30/500\n","2/2 [==============================] - 0s 8ms/step - loss: 30.5883 - mae: 30.5883\n","Epoch 31/500\n","2/2 [==============================] - 0s 11ms/step - loss: 55.6111 - mae: 55.6111\n","Epoch 32/500\n","2/2 [==============================] - 0s 9ms/step - loss: 9.7318 - mae: 9.7318\n","Epoch 33/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.3527 - mae: 12.3527\n","Epoch 34/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.7655 - mae: 24.7655\n","Epoch 35/500\n","2/2 [==============================] - 0s 13ms/step - loss: 11.9028 - mae: 11.9028\n","Epoch 36/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.0748 - mae: 22.0748\n","Epoch 37/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.8728 - mae: 17.8728\n","Epoch 38/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.9667 - mae: 9.9667\n","Epoch 39/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.4978 - mae: 10.4978\n","Epoch 40/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.5864 - mae: 15.5864\n","Epoch 41/500\n","2/2 [==============================] - 0s 8ms/step - loss: 11.8165 - mae: 11.8165\n","Epoch 42/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.9361 - mae: 9.9361\n","Epoch 43/500\n","2/2 [==============================] - 0s 9ms/step - loss: 9.7885 - mae: 9.7885\n","Epoch 44/500\n","2/2 [==============================] - 0s 7ms/step - loss: 30.5871 - mae: 30.5871\n","Epoch 45/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.9768 - mae: 11.9768\n","Epoch 46/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.1206 - mae: 16.1206\n","Epoch 47/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.0405 - mae: 15.0405\n","Epoch 48/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.2609 - mae: 14.2609\n","Epoch 49/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.8085 - mae: 13.8085\n","Epoch 50/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6769 - mae: 12.6769\n","Epoch 51/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.7200 - mae: 14.7200\n","Epoch 52/500\n","2/2 [==============================] - 0s 10ms/step - loss: 18.6261 - mae: 18.6261\n","Epoch 53/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.9684 - mae: 23.9684\n","Epoch 54/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.8731 - mae: 23.8731\n","Epoch 55/500\n","2/2 [==============================] - 0s 9ms/step - loss: 23.0843 - mae: 23.0843\n","Epoch 56/500\n","2/2 [==============================] - 0s 9ms/step - loss: 10.8386 - mae: 10.8386\n","Epoch 57/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6872 - mae: 12.6872\n","Epoch 58/500\n","2/2 [==============================] - 0s 10ms/step - loss: 9.5635 - mae: 9.5635\n","Epoch 59/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4656 - mae: 12.4656\n","Epoch 60/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.8778 - mae: 11.8778\n","Epoch 61/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.9551 - mae: 16.9551\n","Epoch 62/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3755 - mae: 10.3755\n","Epoch 63/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3328 - mae: 10.3328\n","Epoch 64/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.1787 - mae: 24.1787\n","Epoch 65/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5123 - mae: 10.5123\n","Epoch 66/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.1912 - mae: 21.1912\n","Epoch 67/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5090 - mae: 10.5090\n","Epoch 68/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.3581 - mae: 14.3581\n","Epoch 69/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5999 - mae: 10.5999\n","Epoch 70/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6832 - mae: 12.6832\n","Epoch 71/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.1145 - mae: 13.1145\n","Epoch 72/500\n","2/2 [==============================] - 0s 7ms/step - loss: 19.6209 - mae: 19.6209\n","Epoch 73/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.1825 - mae: 11.1825\n","Epoch 74/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.9092 - mae: 21.9092\n","Epoch 75/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.1819 - mae: 7.1819\n","Epoch 76/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.4130 - mae: 9.4130\n","Epoch 77/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.0460 - mae: 22.0460\n","Epoch 78/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.7019 - mae: 17.7019\n","Epoch 79/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.8590 - mae: 14.8590\n","Epoch 80/500\n","2/2 [==============================] - 0s 9ms/step - loss: 25.1854 - mae: 25.1854\n","Epoch 81/500\n","2/2 [==============================] - 0s 13ms/step - loss: 10.9192 - mae: 10.9192\n","Epoch 82/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7374 - mae: 12.7374\n","Epoch 83/500\n","2/2 [==============================] - 0s 9ms/step - loss: 17.5038 - mae: 17.5038\n","Epoch 84/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.2735 - mae: 7.2735\n","Epoch 85/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.0267 - mae: 15.0267\n","Epoch 86/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.3353 - mae: 15.3353\n","Epoch 87/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.2118 - mae: 19.2118\n","Epoch 88/500\n","2/2 [==============================] - 0s 6ms/step - loss: 29.5495 - mae: 29.5495\n","Epoch 89/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.1288 - mae: 10.1288\n","Epoch 90/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.2981 - mae: 21.2981\n","Epoch 91/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5120 - mae: 10.5120\n","Epoch 92/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.1927 - mae: 18.1927\n","Epoch 93/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.8023 - mae: 6.8023\n","Epoch 94/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.9966 - mae: 12.9966\n","Epoch 95/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.3826 - mae: 18.3826\n","Epoch 96/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3356 - mae: 10.3356\n","Epoch 97/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.3998 - mae: 14.3998\n","Epoch 98/500\n","2/2 [==============================] - 0s 8ms/step - loss: 6.5665 - mae: 6.5665\n","Epoch 99/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.5968 - mae: 12.5968\n","Epoch 100/500\n","2/2 [==============================] - 0s 7ms/step - loss: 19.4208 - mae: 19.4208\n","Epoch 101/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.0362 - mae: 16.0362\n","Epoch 102/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.1565 - mae: 11.1565\n","Epoch 103/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3022 - mae: 9.3022\n","Epoch 104/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.9194 - mae: 24.9194\n","Epoch 105/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.9526 - mae: 11.9526\n","Epoch 106/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.0608 - mae: 10.0608\n","Epoch 107/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.4834 - mae: 22.4834\n","Epoch 108/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.1062 - mae: 8.1062\n","Epoch 109/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.3038 - mae: 13.3038\n","Epoch 110/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.9810 - mae: 7.9810\n","Epoch 111/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.7629 - mae: 15.7629\n","Epoch 112/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.7323 - mae: 8.7323\n","Epoch 113/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.6476 - mae: 22.6476\n","Epoch 114/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.9964 - mae: 18.9964\n","Epoch 115/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.0686 - mae: 11.0686\n","Epoch 116/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.0890 - mae: 23.0890\n","Epoch 117/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5499 - mae: 9.5499\n","Epoch 118/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6114 - mae: 10.6114\n","Epoch 119/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.0288 - mae: 8.0288\n","Epoch 120/500\n","2/2 [==============================] - 0s 6ms/step - loss: 29.3924 - mae: 29.3924\n","Epoch 121/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.0665 - mae: 8.0665\n","Epoch 122/500\n","2/2 [==============================] - 0s 6ms/step - loss: 28.0626 - mae: 28.0626\n","Epoch 123/500\n","2/2 [==============================] - 0s 7ms/step - loss: 32.5962 - mae: 32.5962\n","Epoch 124/500\n","2/2 [==============================] - 0s 10ms/step - loss: 19.4011 - mae: 19.4011\n","Epoch 125/500\n","2/2 [==============================] - 0s 8ms/step - loss: 9.5257 - mae: 9.5257\n","Epoch 126/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5979 - mae: 9.5979\n","Epoch 127/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7443 - mae: 12.7443\n","Epoch 128/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.8308 - mae: 12.8308\n","Epoch 129/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.9783 - mae: 13.9783\n","Epoch 130/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.2360 - mae: 10.2360\n","Epoch 131/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.7622 - mae: 21.7622\n","Epoch 132/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.2799 - mae: 8.2799\n","Epoch 133/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.0599 - mae: 9.0599\n","Epoch 134/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.9395 - mae: 16.9395\n","Epoch 135/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.6584 - mae: 10.6584\n","Epoch 136/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.5475 - mae: 18.5475\n","Epoch 137/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.5523 - mae: 23.5523\n","Epoch 138/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2891 - mae: 9.2891\n","Epoch 139/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.0144 - mae: 9.0144\n","Epoch 140/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.0062 - mae: 17.0062\n","Epoch 141/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.3111 - mae: 8.3111\n","Epoch 142/500\n","2/2 [==============================] - 0s 7ms/step - loss: 34.1155 - mae: 34.1155\n","Epoch 143/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.1491 - mae: 23.1491\n","Epoch 144/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.4673 - mae: 10.4673\n","Epoch 145/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.8826 - mae: 25.8826\n","Epoch 146/500\n","2/2 [==============================] - 0s 10ms/step - loss: 9.8395 - mae: 9.8395\n","Epoch 147/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.0217 - mae: 15.0217\n","Epoch 148/500\n","2/2 [==============================] - 0s 8ms/step - loss: 17.4693 - mae: 17.4693\n","Epoch 149/500\n","2/2 [==============================] - 0s 9ms/step - loss: 8.7514 - mae: 8.7514\n","Epoch 150/500\n","2/2 [==============================] - 0s 9ms/step - loss: 7.7208 - mae: 7.7208\n","Epoch 151/500\n","2/2 [==============================] - 0s 9ms/step - loss: 19.8760 - mae: 19.8760\n","Epoch 152/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.2274 - mae: 10.2274\n","Epoch 153/500\n","2/2 [==============================] - 0s 7ms/step - loss: 29.2474 - mae: 29.2474\n","Epoch 154/500\n","2/2 [==============================] - 0s 9ms/step - loss: 10.6326 - mae: 10.6326\n","Epoch 155/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.5253 - mae: 15.5253\n","Epoch 156/500\n","2/2 [==============================] - 0s 8ms/step - loss: 17.1791 - mae: 17.1791\n","Epoch 157/500\n","2/2 [==============================] - 0s 7ms/step - loss: 32.3967 - mae: 32.3967\n","Epoch 158/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.5789 - mae: 10.5789\n","Epoch 159/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.8489 - mae: 8.8489\n","Epoch 160/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.8197 - mae: 21.8197\n","Epoch 161/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.0605 - mae: 11.0605\n","Epoch 162/500\n","2/2 [==============================] - 0s 9ms/step - loss: 21.3599 - mae: 21.3599\n","Epoch 163/500\n","2/2 [==============================] - 0s 8ms/step - loss: 18.8367 - mae: 18.8367\n","Epoch 164/500\n","2/2 [==============================] - 0s 9ms/step - loss: 12.6769 - mae: 12.6769\n","Epoch 165/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7283 - mae: 12.7283\n","Epoch 166/500\n","2/2 [==============================] - 0s 10ms/step - loss: 18.9092 - mae: 18.9092\n","Epoch 167/500\n","2/2 [==============================] - 0s 7ms/step - loss: 26.7992 - mae: 26.7992\n","Epoch 168/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.9607 - mae: 9.9607\n","Epoch 169/500\n","2/2 [==============================] - 0s 12ms/step - loss: 23.0607 - mae: 23.0607\n","Epoch 170/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.0750 - mae: 10.0750\n","Epoch 171/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.8392 - mae: 17.8392\n","Epoch 172/500\n","2/2 [==============================] - 0s 7ms/step - loss: 29.3411 - mae: 29.3411\n","Epoch 173/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.9292 - mae: 16.9292\n","Epoch 174/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.1720 - mae: 11.1720\n","Epoch 175/500\n","2/2 [==============================] - 0s 6ms/step - loss: 27.4577 - mae: 27.4577\n","Epoch 176/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.4166 - mae: 8.4166\n","Epoch 177/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3725 - mae: 9.3725\n","Epoch 178/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.5454 - mae: 18.5454\n","Epoch 179/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.4227 - mae: 10.4227\n","Epoch 180/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.9768 - mae: 7.9768\n","Epoch 181/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.7310 - mae: 17.7310\n","Epoch 182/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.1665 - mae: 11.1665\n","Epoch 183/500\n","2/2 [==============================] - 0s 8ms/step - loss: 12.3749 - mae: 12.3749\n","Epoch 184/500\n","2/2 [==============================] - 0s 8ms/step - loss: 27.3210 - mae: 27.3210\n","Epoch 185/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.5572 - mae: 7.5572\n","Epoch 186/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.9615 - mae: 15.9615\n","Epoch 187/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.5782 - mae: 8.5782\n","Epoch 188/500\n","2/2 [==============================] - 0s 7ms/step - loss: 28.8178 - mae: 28.8178\n","Epoch 189/500\n","2/2 [==============================] - 0s 8ms/step - loss: 13.1560 - mae: 13.1560\n","Epoch 190/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.2968 - mae: 18.2968\n","Epoch 191/500\n","2/2 [==============================] - 0s 9ms/step - loss: 13.7235 - mae: 13.7235\n","Epoch 192/500\n","2/2 [==============================] - 0s 8ms/step - loss: 13.7083 - mae: 13.7083\n","Epoch 193/500\n","2/2 [==============================] - 0s 7ms/step - loss: 28.5734 - mae: 28.5734\n","Epoch 194/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.0907 - mae: 7.0907\n","Epoch 195/500\n","2/2 [==============================] - 0s 8ms/step - loss: 7.0618 - mae: 7.0618\n","Epoch 196/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.9989 - mae: 21.9989\n","Epoch 197/500\n","2/2 [==============================] - 0s 8ms/step - loss: 20.8616 - mae: 20.8616\n","Epoch 198/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4836 - mae: 12.4836\n","Epoch 199/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.9223 - mae: 17.9223\n","Epoch 200/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.7602 - mae: 13.7602\n","Epoch 201/500\n","2/2 [==============================] - 0s 7ms/step - loss: 5.4772 - mae: 5.4772\n","Epoch 202/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.7057 - mae: 13.7057\n","Epoch 203/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.4220 - mae: 9.4220\n","Epoch 204/500\n","2/2 [==============================] - 0s 7ms/step - loss: 20.9689 - mae: 20.9689\n","Epoch 205/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5506 - mae: 9.5506\n","Epoch 206/500\n","2/2 [==============================] - 0s 8ms/step - loss: 11.7227 - mae: 11.7227\n","Epoch 207/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.3609 - mae: 14.3609\n","Epoch 208/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.8456 - mae: 14.8456\n","Epoch 209/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.9478 - mae: 14.9478\n","Epoch 210/500\n","2/2 [==============================] - 0s 10ms/step - loss: 17.8713 - mae: 17.8713\n","Epoch 211/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.8321 - mae: 9.8321\n","Epoch 212/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.2900 - mae: 18.2900\n","Epoch 213/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.0563 - mae: 15.0563\n","Epoch 214/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.6004 - mae: 14.6004\n","Epoch 215/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.3255 - mae: 23.3255\n","Epoch 216/500\n","2/2 [==============================] - 0s 8ms/step - loss: 13.3249 - mae: 13.3249\n","Epoch 217/500\n","2/2 [==============================] - 0s 8ms/step - loss: 9.8278 - mae: 9.8278\n","Epoch 218/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.5786 - mae: 12.5786\n","Epoch 219/500\n","2/2 [==============================] - 0s 7ms/step - loss: 4.9535 - mae: 4.9535\n","Epoch 220/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.1243 - mae: 7.1243\n","Epoch 221/500\n","2/2 [==============================] - 0s 8ms/step - loss: 35.3566 - mae: 35.3566\n","Epoch 222/500\n","2/2 [==============================] - 0s 7ms/step - loss: 34.7387 - mae: 34.7387\n","Epoch 223/500\n","2/2 [==============================] - 0s 8ms/step - loss: 8.0047 - mae: 8.0047\n","Epoch 224/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.7248 - mae: 14.7248\n","Epoch 225/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.7488 - mae: 16.7488\n","Epoch 226/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.9608 - mae: 15.9608\n","Epoch 227/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.2025 - mae: 16.2025\n","Epoch 228/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3472 - mae: 9.3472\n","Epoch 229/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.0188 - mae: 18.0188\n","Epoch 230/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.5896 - mae: 15.5896\n","Epoch 231/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.1569 - mae: 21.1569\n","Epoch 232/500\n","2/2 [==============================] - 0s 8ms/step - loss: 25.3956 - mae: 25.3956\n","Epoch 233/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.4123 - mae: 16.4123\n","Epoch 234/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.3005 - mae: 7.3005\n","Epoch 235/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.0586 - mae: 17.0586\n","Epoch 236/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.1571 - mae: 7.1571\n","Epoch 237/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.2501 - mae: 9.2501\n","Epoch 238/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1218 - mae: 8.1218\n","Epoch 239/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.1253 - mae: 17.1253\n","Epoch 240/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.8953 - mae: 8.8953\n","Epoch 241/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.2212 - mae: 13.2212\n","Epoch 242/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.8122 - mae: 8.8122\n","Epoch 243/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.8834 - mae: 18.8834\n","Epoch 244/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.0370 - mae: 14.0370\n","Epoch 245/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.6695 - mae: 14.6695\n","Epoch 246/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.7936 - mae: 15.7936\n","Epoch 247/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.6678 - mae: 17.6678\n","Epoch 248/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.2254 - mae: 13.2254\n","Epoch 249/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.5014 - mae: 14.5014\n","Epoch 250/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.2212 - mae: 23.2212\n","Epoch 251/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3119 - mae: 9.3119\n","Epoch 252/500\n","2/2 [==============================] - 0s 7ms/step - loss: 36.6940 - mae: 36.6940\n","Epoch 253/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.8491 - mae: 21.8491\n","Epoch 254/500\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2873 - mae: 7.2873\n","Epoch 255/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.7339 - mae: 24.7339\n","Epoch 256/500\n","2/2 [==============================] - 0s 11ms/step - loss: 12.4355 - mae: 12.4355\n","Epoch 257/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5918 - mae: 10.5918\n","Epoch 258/500\n","2/2 [==============================] - 0s 10ms/step - loss: 14.4941 - mae: 14.4941\n","Epoch 259/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.6195 - mae: 8.6195\n","Epoch 260/500\n","2/2 [==============================] - 0s 10ms/step - loss: 43.0556 - mae: 43.0556\n","Epoch 261/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.4633 - mae: 18.4633\n","Epoch 262/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.8853 - mae: 6.8853\n","Epoch 263/500\n","2/2 [==============================] - 0s 9ms/step - loss: 13.7238 - mae: 13.7238\n","Epoch 264/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.0209 - mae: 21.0209\n","Epoch 265/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.3627 - mae: 19.3627\n","Epoch 266/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.4818 - mae: 11.4818\n","Epoch 267/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.5343 - mae: 7.5343\n","Epoch 268/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.6552 - mae: 21.6552\n","Epoch 269/500\n","2/2 [==============================] - 0s 6ms/step - loss: 33.1502 - mae: 33.1502\n","Epoch 270/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.8165 - mae: 9.8165\n","Epoch 271/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7133 - mae: 7.7133\n","Epoch 272/500\n","2/2 [==============================] - 0s 6ms/step - loss: 28.4693 - mae: 28.4693\n","Epoch 273/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.4315 - mae: 7.4315\n","Epoch 274/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.3322 - mae: 6.3322\n","Epoch 275/500\n","2/2 [==============================] - 0s 6ms/step - loss: 37.3626 - mae: 37.3626\n","Epoch 276/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.3091 - mae: 8.3091\n","Epoch 277/500\n","2/2 [==============================] - 0s 6ms/step - loss: 28.1060 - mae: 28.1060\n","Epoch 278/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5868 - mae: 10.5868\n","Epoch 279/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.0368 - mae: 16.0368\n","Epoch 280/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.0895 - mae: 21.0895\n","Epoch 281/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.1530 - mae: 18.1530\n","Epoch 282/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.8954 - mae: 6.8954\n","Epoch 283/500\n","2/2 [==============================] - 0s 8ms/step - loss: 8.0815 - mae: 8.0815\n","Epoch 284/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.6889 - mae: 24.6889\n","Epoch 285/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.4998 - mae: 13.4998\n","Epoch 286/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7537 - mae: 7.7537\n","Epoch 287/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.4083 - mae: 23.4083\n","Epoch 288/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.5031 - mae: 23.5031\n","Epoch 289/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.0194 - mae: 12.0194\n","Epoch 290/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.5886 - mae: 16.5886\n","Epoch 291/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.8686 - mae: 16.8686\n","Epoch 292/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.4947 - mae: 9.4947\n","Epoch 293/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.3018 - mae: 15.3018\n","Epoch 294/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.7893 - mae: 22.7893\n","Epoch 295/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.7666 - mae: 17.7666\n","Epoch 296/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.0966 - mae: 6.0966\n","Epoch 297/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.9652 - mae: 10.9652\n","Epoch 298/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.2168 - mae: 23.2168\n","Epoch 299/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.5929 - mae: 17.5929\n","Epoch 300/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.9420 - mae: 6.9420\n","Epoch 301/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.0147 - mae: 25.0147\n","Epoch 302/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.8369 - mae: 8.8369\n","Epoch 303/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.6355 - mae: 17.6355\n","Epoch 304/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.9182 - mae: 10.9182\n","Epoch 305/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.8161 - mae: 12.8161\n","Epoch 306/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.3405 - mae: 8.3405\n","Epoch 307/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.2496 - mae: 13.2496\n","Epoch 308/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.2060 - mae: 8.2060\n","Epoch 309/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.1743 - mae: 12.1743\n","Epoch 310/500\n","2/2 [==============================] - 0s 6ms/step - loss: 4.6074 - mae: 4.6074\n","Epoch 311/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.1737 - mae: 14.1737\n","Epoch 312/500\n","2/2 [==============================] - 0s 6ms/step - loss: 27.2205 - mae: 27.2205\n","Epoch 313/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.8412 - mae: 14.8412\n","Epoch 314/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.0154 - mae: 13.0154\n","Epoch 315/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2043 - mae: 25.2043\n","Epoch 316/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.2880 - mae: 13.2880\n","Epoch 317/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.3342 - mae: 20.3342\n","Epoch 318/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.0784 - mae: 8.0784\n","Epoch 319/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.4525 - mae: 18.4525\n","Epoch 320/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.1439 - mae: 11.1439\n","Epoch 321/500\n","2/2 [==============================] - 0s 6ms/step - loss: 4.5186 - mae: 4.5186\n","Epoch 322/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.1807 - mae: 18.1807\n","Epoch 323/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.6293 - mae: 6.6293\n","Epoch 324/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.7698 - mae: 12.7698\n","Epoch 325/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.4649 - mae: 9.4649\n","Epoch 326/500\n","2/2 [==============================] - 0s 9ms/step - loss: 20.3686 - mae: 20.3686\n","Epoch 327/500\n","2/2 [==============================] - 0s 11ms/step - loss: 26.8599 - mae: 26.8599\n","Epoch 328/500\n","2/2 [==============================] - 0s 10ms/step - loss: 11.9754 - mae: 11.9754\n","Epoch 329/500\n","2/2 [==============================] - 0s 9ms/step - loss: 16.7442 - mae: 16.7442\n","Epoch 330/500\n","2/2 [==============================] - 0s 10ms/step - loss: 7.1170 - mae: 7.1170\n","Epoch 331/500\n","2/2 [==============================] - 0s 8ms/step - loss: 21.6620 - mae: 21.6620\n","Epoch 332/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.7378 - mae: 12.7378\n","Epoch 333/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.0095 - mae: 9.0095\n","Epoch 334/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.7625 - mae: 9.7625\n","Epoch 335/500\n","2/2 [==============================] - 0s 6ms/step - loss: 5.9667 - mae: 5.9667\n","Epoch 336/500\n","2/2 [==============================] - 0s 9ms/step - loss: 31.7597 - mae: 31.7597\n","Epoch 337/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.1674 - mae: 9.1674\n","Epoch 338/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.5572 - mae: 19.5572\n","Epoch 339/500\n","2/2 [==============================] - 0s 7ms/step - loss: 35.4548 - mae: 35.4548\n","Epoch 340/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.5525 - mae: 10.5525\n","Epoch 341/500\n","2/2 [==============================] - 0s 11ms/step - loss: 10.1409 - mae: 10.1409\n","Epoch 342/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.2795 - mae: 13.2795\n","Epoch 343/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0281 - mae: 11.0281\n","Epoch 344/500\n","2/2 [==============================] - 0s 14ms/step - loss: 9.9125 - mae: 9.9125\n","Epoch 345/500\n","2/2 [==============================] - 0s 6ms/step - loss: 30.9948 - mae: 30.9948\n","Epoch 346/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.6733 - mae: 10.6733\n","Epoch 347/500\n","2/2 [==============================] - 0s 10ms/step - loss: 25.6743 - mae: 25.6743\n","Epoch 348/500\n","2/2 [==============================] - 0s 11ms/step - loss: 13.0076 - mae: 13.0076\n","Epoch 349/500\n","2/2 [==============================] - 0s 9ms/step - loss: 13.1060 - mae: 13.1060\n","Epoch 350/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.4137 - mae: 15.4137\n","Epoch 351/500\n","2/2 [==============================] - 0s 9ms/step - loss: 32.9318 - mae: 32.9318\n","Epoch 352/500\n","2/2 [==============================] - 0s 11ms/step - loss: 14.1500 - mae: 14.1500\n","Epoch 353/500\n","2/2 [==============================] - 0s 10ms/step - loss: 15.8773 - mae: 15.8773\n","Epoch 354/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.9995 - mae: 18.9995\n","Epoch 355/500\n","2/2 [==============================] - 0s 7ms/step - loss: 34.3661 - mae: 34.3661\n","Epoch 356/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.2900 - mae: 8.2900\n","Epoch 357/500\n","2/2 [==============================] - 0s 8ms/step - loss: 21.8774 - mae: 21.8774\n","Epoch 358/500\n","2/2 [==============================] - 0s 8ms/step - loss: 20.0116 - mae: 20.0116\n","Epoch 359/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.0348 - mae: 11.0348\n","Epoch 360/500\n","2/2 [==============================] - 0s 7ms/step - loss: 20.2690 - mae: 20.2690\n","Epoch 361/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.0043 - mae: 11.0043\n","Epoch 362/500\n","2/2 [==============================] - 0s 10ms/step - loss: 6.7952 - mae: 6.7952\n","Epoch 363/500\n","2/2 [==============================] - 0s 9ms/step - loss: 24.0084 - mae: 24.0084\n","Epoch 364/500\n","2/2 [==============================] - 0s 8ms/step - loss: 29.7721 - mae: 29.7721\n","Epoch 365/500\n","2/2 [==============================] - 0s 8ms/step - loss: 8.3323 - mae: 8.3323\n","Epoch 366/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.0698 - mae: 6.0698\n","Epoch 367/500\n","2/2 [==============================] - 0s 6ms/step - loss: 34.9545 - mae: 34.9545\n","Epoch 368/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.3910 - mae: 7.3910\n","Epoch 369/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.2229 - mae: 9.2229\n","Epoch 370/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.9406 - mae: 10.9406\n","Epoch 371/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.0025 - mae: 9.0025\n","Epoch 372/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.6754 - mae: 7.6754\n","Epoch 373/500\n","2/2 [==============================] - 0s 8ms/step - loss: 25.0304 - mae: 25.0304\n","Epoch 374/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.2807 - mae: 13.2807\n","Epoch 375/500\n","2/2 [==============================] - 0s 11ms/step - loss: 11.8231 - mae: 11.8231\n","Epoch 376/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.1064 - mae: 14.1064\n","Epoch 377/500\n","2/2 [==============================] - 0s 9ms/step - loss: 15.6862 - mae: 15.6862\n","Epoch 378/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.9955 - mae: 16.9955\n","Epoch 379/500\n","2/2 [==============================] - 0s 8ms/step - loss: 19.4776 - mae: 19.4776\n","Epoch 380/500\n","2/2 [==============================] - 0s 10ms/step - loss: 15.8382 - mae: 15.8382\n","Epoch 381/500\n","2/2 [==============================] - 0s 8ms/step - loss: 11.4255 - mae: 11.4255\n","Epoch 382/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.3080 - mae: 16.3080\n","Epoch 383/500\n","2/2 [==============================] - 0s 8ms/step - loss: 22.0522 - mae: 22.0522\n","Epoch 384/500\n","2/2 [==============================] - 0s 11ms/step - loss: 7.7767 - mae: 7.7767\n","Epoch 385/500\n","2/2 [==============================] - 0s 9ms/step - loss: 10.5764 - mae: 10.5764\n","Epoch 386/500\n","2/2 [==============================] - 0s 8ms/step - loss: 19.0316 - mae: 19.0316\n","Epoch 387/500\n","2/2 [==============================] - 0s 8ms/step - loss: 26.6383 - mae: 26.6383\n","Epoch 388/500\n","2/2 [==============================] - 0s 11ms/step - loss: 10.1674 - mae: 10.1674\n","Epoch 389/500\n","2/2 [==============================] - 0s 9ms/step - loss: 5.1678 - mae: 5.1678\n","Epoch 390/500\n","2/2 [==============================] - 0s 8ms/step - loss: 18.9558 - mae: 18.9558\n","Epoch 391/500\n","2/2 [==============================] - 0s 8ms/step - loss: 9.2856 - mae: 9.2856\n","Epoch 392/500\n","2/2 [==============================] - 0s 8ms/step - loss: 14.3630 - mae: 14.3630\n","Epoch 393/500\n","2/2 [==============================] - 0s 9ms/step - loss: 15.3645 - mae: 15.3645\n","Epoch 394/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.7157 - mae: 14.7157\n","Epoch 395/500\n","2/2 [==============================] - 0s 9ms/step - loss: 24.9237 - mae: 24.9237\n","Epoch 396/500\n","2/2 [==============================] - 0s 7ms/step - loss: 19.2857 - mae: 19.2857\n","Epoch 397/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.5360 - mae: 11.5360\n","Epoch 398/500\n","2/2 [==============================] - 0s 7ms/step - loss: 19.1542 - mae: 19.1542\n","Epoch 399/500\n","2/2 [==============================] - 0s 7ms/step - loss: 26.0924 - mae: 26.0924\n","Epoch 400/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.7358 - mae: 15.7358\n","Epoch 401/500\n","2/2 [==============================] - 0s 10ms/step - loss: 14.6226 - mae: 14.6226\n","Epoch 402/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.2227 - mae: 24.2227\n","Epoch 403/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.5362 - mae: 16.5362\n","Epoch 404/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.1676 - mae: 9.1676\n","Epoch 405/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.4494 - mae: 10.4494\n","Epoch 406/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.7866 - mae: 7.7866\n","Epoch 407/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.8713 - mae: 9.8713\n","Epoch 408/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.7391 - mae: 10.7391\n","Epoch 409/500\n","2/2 [==============================] - 0s 7ms/step - loss: 6.5694 - mae: 6.5694\n","Epoch 410/500\n","2/2 [==============================] - 0s 9ms/step - loss: 6.3064 - mae: 6.3064\n","Epoch 411/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.1421 - mae: 16.1421\n","Epoch 412/500\n","2/2 [==============================] - 0s 7ms/step - loss: 5.1225 - mae: 5.1225\n","Epoch 413/500\n","2/2 [==============================] - 0s 9ms/step - loss: 7.1771 - mae: 7.1771\n","Epoch 414/500\n","2/2 [==============================] - 0s 8ms/step - loss: 18.0479 - mae: 18.0479\n","Epoch 415/500\n","2/2 [==============================] - 0s 9ms/step - loss: 12.3559 - mae: 12.3559\n","Epoch 416/500\n","2/2 [==============================] - 0s 10ms/step - loss: 26.2151 - mae: 26.2151\n","Epoch 417/500\n","2/2 [==============================] - 0s 8ms/step - loss: 14.0777 - mae: 14.0777\n","Epoch 418/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.0617 - mae: 13.0617\n","Epoch 419/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.0273 - mae: 16.0273\n","Epoch 420/500\n","2/2 [==============================] - 0s 10ms/step - loss: 25.0620 - mae: 25.0620\n","Epoch 421/500\n","2/2 [==============================] - 0s 10ms/step - loss: 16.6045 - mae: 16.6045\n","Epoch 422/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.6776 - mae: 8.6776\n","Epoch 423/500\n","2/2 [==============================] - 0s 9ms/step - loss: 24.7872 - mae: 24.7872\n","Epoch 424/500\n","2/2 [==============================] - 0s 14ms/step - loss: 16.5351 - mae: 16.5351\n","Epoch 425/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.2292 - mae: 7.2292\n","Epoch 426/500\n","2/2 [==============================] - 0s 7ms/step - loss: 20.6779 - mae: 20.6779\n","Epoch 427/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.4021 - mae: 6.4021\n","Epoch 428/500\n","2/2 [==============================] - 0s 10ms/step - loss: 13.2363 - mae: 13.2363\n","Epoch 429/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.9933 - mae: 10.9933\n","Epoch 430/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.8720 - mae: 11.8720\n","Epoch 431/500\n","2/2 [==============================] - 0s 12ms/step - loss: 8.4996 - mae: 8.4996\n","Epoch 432/500\n","2/2 [==============================] - 0s 9ms/step - loss: 18.5900 - mae: 18.5900\n","Epoch 433/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.1341 - mae: 10.1341\n","Epoch 434/500\n","2/2 [==============================] - 0s 7ms/step - loss: 30.6640 - mae: 30.6640\n","Epoch 435/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.1671 - mae: 11.1671\n","Epoch 436/500\n","2/2 [==============================] - 0s 11ms/step - loss: 28.7630 - mae: 28.7630\n","Epoch 437/500\n","2/2 [==============================] - 0s 8ms/step - loss: 8.0237 - mae: 8.0237\n","Epoch 438/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.8066 - mae: 12.8066\n","Epoch 439/500\n","2/2 [==============================] - 0s 8ms/step - loss: 33.9038 - mae: 33.9038\n","Epoch 440/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.4166 - mae: 15.4166\n","Epoch 441/500\n","2/2 [==============================] - 0s 10ms/step - loss: 17.7565 - mae: 17.7565\n","Epoch 442/500\n","2/2 [==============================] - 0s 11ms/step - loss: 6.4202 - mae: 6.4202\n","Epoch 443/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.9189 - mae: 12.9189\n","Epoch 444/500\n","2/2 [==============================] - 0s 7ms/step - loss: 5.5649 - mae: 5.5649\n","Epoch 445/500\n","2/2 [==============================] - 0s 10ms/step - loss: 9.6785 - mae: 9.6785\n","Epoch 446/500\n","2/2 [==============================] - 0s 10ms/step - loss: 15.1306 - mae: 15.1306\n","Epoch 447/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.3640 - mae: 22.3640\n","Epoch 448/500\n","2/2 [==============================] - 0s 9ms/step - loss: 13.7746 - mae: 13.7746\n","Epoch 449/500\n","2/2 [==============================] - 0s 8ms/step - loss: 12.4145 - mae: 12.4145\n","Epoch 450/500\n","2/2 [==============================] - 0s 10ms/step - loss: 15.4594 - mae: 15.4594\n","Epoch 451/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.5719 - mae: 17.5719\n","Epoch 452/500\n","2/2 [==============================] - 0s 10ms/step - loss: 43.9436 - mae: 43.9436\n","Epoch 453/500\n","2/2 [==============================] - 0s 11ms/step - loss: 25.1875 - mae: 25.1875\n","Epoch 454/500\n","2/2 [==============================] - 0s 12ms/step - loss: 21.8179 - mae: 21.8179\n","Epoch 455/500\n","2/2 [==============================] - 0s 9ms/step - loss: 6.6863 - mae: 6.6863\n","Epoch 456/500\n","2/2 [==============================] - 0s 9ms/step - loss: 8.9675 - mae: 8.9675\n","Epoch 457/500\n","2/2 [==============================] - 0s 8ms/step - loss: 6.0808 - mae: 6.0808\n","Epoch 458/500\n","2/2 [==============================] - 0s 8ms/step - loss: 11.0591 - mae: 11.0591\n","Epoch 459/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.9318 - mae: 8.9318\n","Epoch 460/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3483 - mae: 9.3483\n","Epoch 461/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.3534 - mae: 10.3534\n","Epoch 462/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.9201 - mae: 12.9201\n","Epoch 463/500\n","2/2 [==============================] - 0s 8ms/step - loss: 28.7415 - mae: 28.7415\n","Epoch 464/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.6553 - mae: 7.6553\n","Epoch 465/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.0248 - mae: 16.0248\n","Epoch 466/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.7529 - mae: 8.7529\n","Epoch 467/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.0815 - mae: 22.0815\n","Epoch 468/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.6834 - mae: 22.6834\n","Epoch 469/500\n","2/2 [==============================] - 0s 8ms/step - loss: 20.0682 - mae: 20.0682\n","Epoch 470/500\n","2/2 [==============================] - 0s 9ms/step - loss: 7.5563 - mae: 7.5563\n","Epoch 471/500\n","2/2 [==============================] - 0s 7ms/step - loss: 27.9474 - mae: 27.9474\n","Epoch 472/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.0662 - mae: 12.0662\n","Epoch 473/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.5124 - mae: 14.5124\n","Epoch 474/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.2453 - mae: 18.2453\n","Epoch 475/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.4247 - mae: 20.4247\n","Epoch 476/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.1820 - mae: 16.1820\n","Epoch 477/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.9047 - mae: 13.9047\n","Epoch 478/500\n","2/2 [==============================] - 0s 8ms/step - loss: 8.7231 - mae: 8.7231\n","Epoch 479/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.8161 - mae: 10.8161\n","Epoch 480/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.9891 - mae: 17.9891\n","Epoch 481/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.8745 - mae: 15.8745\n","Epoch 482/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.4496 - mae: 21.4496\n","Epoch 483/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.0719 - mae: 25.0719\n","Epoch 484/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.6424 - mae: 23.6424\n","Epoch 485/500\n","2/2 [==============================] - 0s 8ms/step - loss: 5.7042 - mae: 5.7042\n","Epoch 486/500\n","2/2 [==============================] - 0s 7ms/step - loss: 19.6484 - mae: 19.6484\n","Epoch 487/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.0796 - mae: 14.0796\n","Epoch 488/500\n","2/2 [==============================] - 0s 7ms/step - loss: 30.6833 - mae: 30.6833\n","Epoch 489/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.0532 - mae: 12.0532\n","Epoch 490/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.7924 - mae: 12.7924\n","Epoch 491/500\n","2/2 [==============================] - 0s 8ms/step - loss: 23.7330 - mae: 23.7330\n","Epoch 492/500\n","2/2 [==============================] - 0s 7ms/step - loss: 20.2438 - mae: 20.2438\n","Epoch 493/500\n","2/2 [==============================] - 0s 9ms/step - loss: 4.9209 - mae: 4.9209\n","Epoch 494/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.5478 - mae: 12.5478\n","Epoch 495/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.4790 - mae: 13.4790\n","Epoch 496/500\n","2/2 [==============================] - 0s 9ms/step - loss: 12.7439 - mae: 12.7439\n","Epoch 497/500\n","2/2 [==============================] - 0s 8ms/step - loss: 17.7457 - mae: 17.7457\n","Epoch 498/500\n","2/2 [==============================] - 0s 9ms/step - loss: 23.2739 - mae: 23.2739\n","Epoch 499/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.0393 - mae: 9.0393\n","Epoch 500/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.3889 - mae: 14.3889\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc70d919c0>"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["y_pred_3=model_3.predict(x_test)\n","plot_predictions(predictions=y_pred_3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"HHmfQQ2SNugp","executionInfo":{"status":"ok","timestamp":1704113402597,"user_tz":-330,"elapsed":54,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"f9f52e6a-c624-4211-85da-88f6fe8db50e"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 109ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"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Tj5e49TgdU4NXufUSPTrfKAVoBAKIwAAAADIKyRBAAAAAPIKSVACFRUV6eabb1ZRUVG6p5LTeJ1Tg9c5NXidU4PXOfl4jVOD1zk1eJ1TI52vc9YXRgAAAACA7mAlCAAAAEBeIQkCAAAAkFdIggAAAADkFZIgAAAAAHmFJAgAAABAXiEJ6qFf/OIXOumkkzRgwACVlpZ2GtPU1KQzzzxTAwYM0NChQ/XDH/5Q+/fvj4hZvny5jjvuOBUVFenwww/XggULkj/5LLV8+XLZbLZOH6tXr5Ykbd68udPzr732Wppnn10qKiqiXsPbbrstImbdunXyeDzq16+f3G63br/99jTNNjtt3rxZl19+uUaNGqX+/fvrsMMO080336y9e/dGxPB+7r1f//rXqqioUL9+/TRhwgS9/vrr6Z5SVps7d65OPPFEFRcXa+jQoTrnnHO0fv36iJjKysqo9+33vve9NM04O91yyy1Rr+HYsWPD57/44gvNmjVLgwcP1sCBA3Xeeedp27ZtaZxxdurs/3c2m02zZs2SxHu5J/72t7/prLPO0vDhw2Wz2fTcc89FnDdNUzfddJOcTqf69++vyZMn67333ouI+eSTT3TRRRfJ4XCotLRUl19+uXbt2pXQeZIE9dDevXv17W9/W9///vc7PR8MBnXmmWdq7969evXVV/X4449rwYIFuummm8IxmzZt0plnnqlJkyapoaFBtbW1uuKKK/TXv/41Vd9GVjnppJMUCAQiHldccYVGjRqlE044ISJ2yZIlEXHHH398mmadvX72s59FvIZXXnll+Fxra6tOP/10jRw5UmvWrNEdd9yhW265RQ899FAaZ5xd3n33XbW1tenBBx/UP/7xD91zzz164IEH9OMf/zgqlvdzzz3zzDOaM2eObr75Zr355ps6+uijNWXKFG3fvj3dU8taL7/8smbNmqXXXntNixcv1r59+3T66adr9+7dEXEzZsyIeN/yQUn3jR8/PuI1XLFiRfjc1VdfrRdeeEHPPvusXn75ZW3ZskVerzeNs81Oq1evjniNFy9eLEn69re/HY7hvdw9u3fv1tFHH61f//rXnZ6//fbbde+99+qBBx7QqlWrdNBBB2nKlCn64osvwjEXXXSR/vGPf2jx4sX605/+pL/97W+aOXNmYidqolfmz59vlpSURI3/5S9/MQsKCsytW7eGx37zm9+YDofD3LNnj2mapnndddeZ48ePj7juggsuMKdMmZLUOeeKvXv3mkOGDDF/9rOfhcc2bdpkSjLXrl2bvonlgJEjR5r33HNPl+fvv/9+c9CgQeH3smma5vXXX2+OGTMmBbPLXbfffrs5atSo8DHv59776le/as6aNSt8HAwGzeHDh5tz585N46xyy/bt201J5ssvvxweO/XUU82ampr0TSoH3HzzzebRRx/d6bkdO3aYffv2NZ999tnwWGNjoynJXLlyZYpmmJtqamrMww47zGxrazNNk/dyb0ky//CHP4SP29razLKyMvOOO+4Ij+3YscMsKioyn3rqKdM0TfOdd94xJZmrV68Ox7z44oumzWYz/X5/wubGSlCSrFy5UkceeaSGDRsWHpsyZYpaW1v1j3/8IxwzefLkiOumTJmilStXpnSu2er555/Xxx9/rMsuuyzq3Nlnn62hQ4fq5JNP1vPPP5+G2WW/2267TYMHD9axxx6rO+64I2Ir58qVK3XKKaeosLAwPDZlyhStX79en376aTqmmxNaWlp08MEHR43zfu6ZvXv3as2aNRE/ZwsKCjR58mR+ziZQS0uLJEW9d5944gkdcsghOuKII3TDDTfos88+S8f0stp7772n4cOH69BDD9VFF12kpqYmSdKaNWu0b9++iPf22LFjNWLECN7bvbB371797ne/03e+8x3ZbLbwOO/lxNm0aZO2bt0a8d4tKSnRhAkTwu/dlStXqrS0NGKXz+TJk1VQUKBVq1YlbC59EvZMiLB169aIBEhS+Hjr1q0HjGltbdXnn3+u/v37p2ayWerRRx/VlClT5HK5wmMDBw7UXXfdpa997WsqKCjQ73//e51zzjl67rnndPbZZ6dxttnlqquu0nHHHaeDDz5Yr776qm644QYFAgHdfffdkqz37qhRoyKuaf/+HjRoUMrnnO02bNig++67T3feeWd4jPdz73z00UcKBoOd/px999130zSr3NLW1qba2lp97Wtf0xFHHBEev/DCCzVy5EgNHz5c69at0/XXX6/169fLMIw0zja7TJgwQQsWLNCYMWMUCAR06623yuPx6O9//7u2bt2qwsLCqHuShw0bFv4dA9333HPPaceOHbr00kvDY7yXEyv0/uzs53L734+HDh0acb5Pnz46+OCDE/r+Jglq50c/+pF++ctfHjCmsbEx4sZE9F5PXvcPP/xQf/3rX7Vw4cKIuEMOOURz5swJH5944onasmWL7rjjjrz/pbE7r3P71/Coo45SYWGhvvvd72ru3LkqKipK9lSzWk/ez36/X1OnTtW3v/1tzZgxIzzO+xmZbtasWfr73/8eca+KpIi9+0ceeaScTqdOO+00bdy4UYcddliqp5mVvvnNb4b/ftRRR2nChAkaOXKkFi5cyIekSfLoo4/qm9/8poYPHx4e472cu0iC2rnmmmsisv/OHHrooXE9V1lZWVQFolDVlrKysvCfHSu5bNu2TQ6HI69+wPXkdZ8/f74GDx4c1y+CEyZMCN/omM968/6eMGGC9u/fr82bN2vMmDFdvnelf7+/81V3X+ctW7Zo0qRJOumkk+IqLMH7OX6HHHKI7HZ7p+/VfH+fJsLs2bPDNyy3X5HvzIQJEyRZK5784tgzpaWl+spXvqINGzboG9/4hvbu3asdO3ZErAbx3u65Dz74QEuWLIm5wsN7uXdC789t27bJ6XSGx7dt26ZjjjkmHNOxeM3+/fv1ySefJPT9TRLUzpAhQzRkyJCEPNfEiRP1i1/8Qtu3bw8v6S1evFgOh0P/8R//EY75y1/+EnHd4sWLNXHixITMIVt093U3TVPz58/XJZdcor59+8aMb2hoiPiHlq968/5uaGhQQUFB+L08ceJE/eQnP9G+ffvC/w0WL16sMWPG5P1WuO68zn6/X5MmTdLxxx+v+fPnq6Ag9m2avJ/jV1hYqOOPP15Lly7VOeecI8navrV06VLNnj07vZPLYqZp6sorr9Qf/vAHLV++PGprbGcaGhokifduL+zatUsbN27UxRdfrOOPP159+/bV0qVLdd5550mS1q9fr6amprz7HSJR5s+fr6FDh+rMM888YBzv5d4ZNWqUysrKtHTp0nDS09raqlWrVoUrLk+cOFE7duzQmjVrwtVQX3rpJbW1tYWT0IRIWImFPPPBBx+Ya9euNW+99VZz4MCB5tq1a821a9eaO3fuNE3TNPfv328eccQR5umnn242NDSYixYtMocMGWLecMMN4ed4//33zQEDBpg//OEPzcbGRvPXv/61abfbzUWLFqXr28oKS5YsMSWZjY2NUecWLFhgPvnkk2ZjY6PZ2Nho/uIXvzALCgrMxx57LA0zzU6vvvqqec8995gNDQ3mxo0bzd/97nfmkCFDzEsuuSQcs2PHDnPYsGHmxRdfbP797383n376aXPAgAHmgw8+mMaZZ5cPP/zQPPzww83TTjvN/PDDD81AIBB+hPB+7r2nn37aLCoqMhcsWGC+88475syZM83S0tKIyp3onu9///tmSUmJuXz58oj37WeffWaapmlu2LDB/NnPfma+8cYb5qZNm8w//vGP5qGHHmqecsopaZ55drnmmmvM5cuXm5s2bTJfeeUVc/LkyeYhhxxibt++3TRN0/ze975njhgxwnzppZfMN954w5w4caI5ceLENM86OwWDQXPEiBHm9ddfHzHOe7lndu7cGf69WJJ59913m2vXrjU/+OAD0zRN87bbbjNLS0vNP/7xj+a6devMqqoqc9SoUebnn38efo6pU6eaxx57rLlq1SpzxYoV5ujRo81p06YldJ4kQT00ffp0U1LUY9myZeGYzZs3m9/85jfN/v37m4cccoh5zTXXmPv27Yt4nmXLlpnHHHOMWVhYaB566KHm/PnzU/uNZKFp06aZJ510UqfnFixYYI4bN84cMGCA6XA4zK9+9asRJUQR25o1a8wJEyaYJSUlZr9+/cxx48aZ//M//2N+8cUXEXFvvfWWefLJJ5tFRUVmeXm5edttt6Vpxtlp/vz5nf4Maf/ZFO/nxLjvvvvMESNGmIWFheZXv/pV87XXXkv3lLJaV+/b0P+/mpqazFNOOcU8+OCDzaKiIvPwww83f/jDH5otLS3pnXiWueCCC0yn02kWFhaa5eXl5gUXXGBu2LAhfP7zzz83f/CDH5iDBg0yBwwYYJ577rkRH6Igfn/9619NSeb69esjxnkv98yyZcs6/Rkxffp00zStMtk33nijOWzYMLOoqMg87bTTol77jz/+2Jw2bZo5cOBA0+FwmJdddll4oSFRbKZpmolbVwIAAACAzEafIAAAAAB5hSQIAAAAQF4hCQIAAACQV0iCAAAAAOQVkiAAAAAAeYUkCAAAAEBeIQkCAAAAkFdIggAAAADkFZIgAAAAAHmFJAgAAABAXiEJAgAAAJBX/j8bHtGowHFsXAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["#calculate the evaluation metrics for the model_3\n","mae_3=MAE(y_test,y_pred_3)\n","mse_3=MSE(y_test,y_pred_3)\n","mae_3,mse_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aRNpBfdYOzHL","executionInfo":{"status":"ok","timestamp":1704113402597,"user_tz":-330,"elapsed":41,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"34b70db7-f183-495e-80af-ee6717e75a62"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=67.92277>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=4697.9634>)"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["# *Comaparing the models:*"],"metadata":{"id":"nO-hzCo4QqNV"}},{"cell_type":"code","source":["#lets compare our 3 models:\n","import pandas as pd\n","\n","model_results=[[\"model_1\",mae_1.numpy(),mse_1.numpy()],\n","               [\"model_2\",MAE_2.numpy(),MSE_2.numpy()],\n","               [\"model_3\",mae_3.numpy(),mse_3.numpy()]]\n","\n","all_results=pd.DataFrame(model_results,columns=[\"model\",\"MAE\",\"MSE\"])\n","\n","all_results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"LWM1e1JMQwby","executionInfo":{"status":"ok","timestamp":1704113402597,"user_tz":-330,"elapsed":40,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"66f5e25c-c9a4-4f31-d6f5-572a5659e77e"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     model        MAE          MSE\n","0  model_1   8.490606    78.514603\n","1  model_2  13.547598   193.805298\n","2  model_3  67.922768  4697.963379"],"text/html":["\n","  <div id=\"df-a7361a5d-df73-4b38-9f7c-725ded5e7c2c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>model_1</td>\n","      <td>8.490606</td>\n","      <td>78.514603</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>model_2</td>\n","      <td>13.547598</td>\n","      <td>193.805298</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>model_3</td>\n","      <td>67.922768</td>\n","      <td>4697.963379</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7361a5d-df73-4b38-9f7c-725ded5e7c2c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7361a5d-df73-4b38-9f7c-725ded5e7c2c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7361a5d-df73-4b38-9f7c-725ded5e7c2c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ceb99a31-9f6f-4ce5-ae95-7880d7377be0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ceb99a31-9f6f-4ce5-ae95-7880d7377be0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ceb99a31-9f6f-4ce5-ae95-7880d7377be0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d50529ef-c5d3-4f45-9b70-502ba34ab463\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('all_results')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d50529ef-c5d3-4f45-9b70-502ba34ab463 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('all_results');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"id":"Jcrbnco_RpHm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704113402597,"user_tz":-330,"elapsed":39,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"225f2df4-98db-4191-b079-c42ed3464954"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_layer (Dense)         (None, 10)                20        \n","                                                                 \n"," output_layer (Dense)        (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["> 🔑 **Note:** One of your main goals should be to minimize the time between your experiments. The more experiments you do, the more things you'll figure out which don't work and in turn, get closer to figuring out what does work. Remember the machine learning practitioner's motto: \"experiment, experiment, experiment\".\n","\n","Another thing you'll also find is what you thought may work (such as training a model for longer) may not always work and the exact opposite is also often the case.\n","\n","## Tracking your experiments\n","\n","One really good habit to get into is tracking your modelling experiments to see which perform better than others.\n","\n","We've done a simple version of this above (keeping the results in different variables)."],"metadata":{"id":"kWqzEOVKEPXD"}},{"cell_type":"markdown","source":["#Saving our Model:\n","\n","saving our model allows use to use it outside the the colab like web app or app.\n","\n","there are two formats to save our model:\n","\n","* 1.saved model format\n","* 2.HDF5 format"],"metadata":{"id":"MwYcXmBpEzDh"}},{"cell_type":"code","source":["#save the model using savedmodel format:\n","model_2.save(\"best_model_among_three_model\")"],"metadata":{"id":"uXH6W0sJHiIY","executionInfo":{"status":"ok","timestamp":1704113402598,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["#save the model using HDF5 format\n","model_2.save(\"best_model_using_HDF5_format.HDF5\")"],"metadata":{"id":"VTWB56wqH9tY","executionInfo":{"status":"ok","timestamp":1704113402598,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":61,"outputs":[]},{"cell_type":"markdown","source":["# Saving our load model:"],"metadata":{"id":"4ZxRWVJcIaE7"}},{"cell_type":"code","source":["#Load in the saved model format\n","model_saved_format=tf.keras.models.load_model(\"/content/best_model_among_three_model\")\n","model_saved_format.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCJgNmh9K72a","executionInfo":{"status":"ok","timestamp":1704113402598,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"211ac900-387a-44e6-cfa5-f6eca6396734"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_6 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_7 (Dense)             (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model_2.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WrLrqIn_LhOZ","executionInfo":{"status":"ok","timestamp":1704113402599,"user_tz":-330,"elapsed":34,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"9fbd61ea-d0a4-4a8d-ab92-e8811d8e27a2"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_6 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_7 (Dense)             (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["#compare predictions of the model_2 with predictions of saved model format\n","model_2_preds=model_2.predict(x_test)\n","loaded_saved_model_format_preds=model_saved_format.predict(x_test)\n","MAE(y_test,model_2_preds.squeeze()).numpy()==MAE(y_test,loaded_saved_model_format_preds.squeeze()).numpy()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qBYV3MpWMNu9","executionInfo":{"status":"ok","timestamp":1704113402599,"user_tz":-330,"elapsed":32,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"92ad5497-818c-4931-fd74-d0c70911df5d"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 62ms/step\n","1/1 [==============================] - 0s 103ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["model_2_preds==loaded_saved_model_format_preds # need to squeeze the models first to make their dimensions equal"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q5M62wBAOHwv","executionInfo":{"status":"ok","timestamp":1704113402599,"user_tz":-330,"elapsed":30,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d951e343-99df-4838-ff41-6c1df935572c"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True]])"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["# Load a model from the HDF5 format\n","loaded_h5_model = tf.keras.models.load_model(\"/content/best_model_using_HDF5_format.HDF5\")\n","loaded_h5_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mAKTPHowPEbk","executionInfo":{"status":"ok","timestamp":1704113459117,"user_tz":-330,"elapsed":1348,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"02e0f52d-aabe-4303-824d-b13ab1fdd55c"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_6 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_7 (Dense)             (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31 (124.00 Byte)\n","Trainable params: 31 (124.00 Byte)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["#check .Hf5 model predictions are equal to model2 predictions\n","model_2_preds=model_2.predict(x_test)\n","loaded_HDF_Format_preds=loaded_h5_model.predict(x_test)\n","loaded_HDF_Format_preds== model_2_preds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ye2YTToPPSkg","executionInfo":{"status":"ok","timestamp":1704113464206,"user_tz":-330,"elapsed":372,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"7547c3e1-a8b0-4a87-e07d-eaf7449962d9"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 51ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True]])"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["MAE(y_test,model_2_preds.squeeze()).numpy()==MAE(y_test,loaded_HDF_Format_preds.squeeze()).numpy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDVtPupqPZtZ","executionInfo":{"status":"ok","timestamp":1704113467338,"user_tz":-330,"elapsed":707,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d4821c13-53f1-4075-f1cb-7b439e09108a"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["## Downloading a model (from Google Colab)\n","\n","Say you wanted to get your model from Google Colab to your local machine, you can do one of the following things:\n","* Right click on the file in the files pane and click 'download'.\n","* Use the code below."],"metadata":{"id":"y3r0TP_5RGQb"}},{"cell_type":"code","source":["#download file from google colab using a code\n","'''from google.colab import files\n","files.download(\"/content/best_model_using_HDF5_format\")'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"LT_AN5GdRzLo","executionInfo":{"status":"ok","timestamp":1704113473081,"user_tz":-330,"elapsed":421,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d81ad6d5-1c93-4ce8-9dea-53da10e6cce1"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'from google.colab import files\\nfiles.download(\"/content/best_model_using_HDF5_format\")'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":[],"metadata":{"id":"mF_OnQ5xSkAT","executionInfo":{"status":"ok","timestamp":1704113473686,"user_tz":-330,"elapsed":5,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["'''from google.colab import drive\n","drive.mount('/content/drive')'''"],"metadata":{"id":"skyks2ptS3dO","colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"status":"ok","timestamp":1704113496355,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"8441f70b-c2b5-45e2-89fc-75f53535c37f"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"from google.colab import drive\\ndrive.mount('/content/drive')\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["# A Larger Example\n"],"metadata":{"id":"zxNandraWBUk"}},{"cell_type":"code","source":["import pandas as pd\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n"],"metadata":{"id":"3Fpdl7DnWGQB","executionInfo":{"status":"ok","timestamp":1704113509522,"user_tz":-330,"elapsed":705,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["insurance = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")\n","insurance.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"4dFVF2gWWNDl","executionInfo":{"status":"ok","timestamp":1704113509951,"user_tz":-330,"elapsed":40,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d0b1dd18-543b-4669-a55e-72a70439dc29"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     sex     bmi  children smoker     region      charges\n","0   19  female  27.900         0    yes  southwest  16884.92400\n","1   18    male  33.770         1     no  southeast   1725.55230\n","2   28    male  33.000         3     no  southeast   4449.46200\n","3   33    male  22.705         0     no  northwest  21984.47061\n","4   32    male  28.880         0     no  northwest   3866.85520"],"text/html":["\n","  <div id=\"df-897a30c9-0190-4f33-b872-2055e35eaac4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-897a30c9-0190-4f33-b872-2055e35eaac4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-897a30c9-0190-4f33-b872-2055e35eaac4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-897a30c9-0190-4f33-b872-2055e35eaac4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0fa77b00-785b-462c-b2f1-ac1578bd5300\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0fa77b00-785b-462c-b2f1-ac1578bd5300')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0fa77b00-785b-462c-b2f1-ac1578bd5300 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["insurance.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hkGsGPL1bQVl","executionInfo":{"status":"ok","timestamp":1704113509952,"user_tz":-330,"elapsed":39,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"f3165fb6-5ddf-4421-b02e-ad6c7853cb6b"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1338 entries, 0 to 1337\n","Data columns (total 7 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   age       1338 non-null   int64  \n"," 1   sex       1338 non-null   object \n"," 2   bmi       1338 non-null   float64\n"," 3   children  1338 non-null   int64  \n"," 4   smoker    1338 non-null   object \n"," 5   region    1338 non-null   object \n"," 6   charges   1338 non-null   float64\n","dtypes: float64(2), int64(2), object(3)\n","memory usage: 73.3+ KB\n"]}]},{"cell_type":"code","source":["insurance.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"zIynSkfqbXpZ","executionInfo":{"status":"ok","timestamp":1704113509952,"user_tz":-330,"elapsed":37,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"047f0f76-ada3-4dfb-b017-19306a7184e3"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               age          bmi     children       charges\n","count  1338.000000  1338.000000  1338.000000   1338.000000\n","mean     39.207025    30.663397     1.094918  13270.422265\n","std      14.049960     6.098187     1.205493  12110.011237\n","min      18.000000    15.960000     0.000000   1121.873900\n","25%      27.000000    26.296250     0.000000   4740.287150\n","50%      39.000000    30.400000     1.000000   9382.033000\n","75%      51.000000    34.693750     2.000000  16639.912515\n","max      64.000000    53.130000     5.000000  63770.428010"],"text/html":["\n","  <div id=\"df-47c8197e-8ac4-447b-b0c8-bd8bd2a246bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1338.000000</td>\n","      <td>1338.000000</td>\n","      <td>1338.000000</td>\n","      <td>1338.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>39.207025</td>\n","      <td>30.663397</td>\n","      <td>1.094918</td>\n","      <td>13270.422265</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14.049960</td>\n","      <td>6.098187</td>\n","      <td>1.205493</td>\n","      <td>12110.011237</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>15.960000</td>\n","      <td>0.000000</td>\n","      <td>1121.873900</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>27.000000</td>\n","      <td>26.296250</td>\n","      <td>0.000000</td>\n","      <td>4740.287150</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>39.000000</td>\n","      <td>30.400000</td>\n","      <td>1.000000</td>\n","      <td>9382.033000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>51.000000</td>\n","      <td>34.693750</td>\n","      <td>2.000000</td>\n","      <td>16639.912515</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>64.000000</td>\n","      <td>53.130000</td>\n","      <td>5.000000</td>\n","      <td>63770.428010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47c8197e-8ac4-447b-b0c8-bd8bd2a246bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47c8197e-8ac4-447b-b0c8-bd8bd2a246bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47c8197e-8ac4-447b-b0c8-bd8bd2a246bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6d2a113-99c2-4caf-8651-01a34a55465c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6d2a113-99c2-4caf-8651-01a34a55465c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6d2a113-99c2-4caf-8651-01a34a55465c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["insurance.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qqrfdt60beCl","executionInfo":{"status":"ok","timestamp":1704113509952,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"b5ff9315-a76b-49f0-bb32-53e44ab3b306"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age         0\n","sex         0\n","bmi         0\n","children    0\n","smoker      0\n","region      0\n","charges     0\n","dtype: int64"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["insurance[\"sex\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bNNtDy15W6_Q","executionInfo":{"status":"ok","timestamp":1704113509952,"user_tz":-330,"elapsed":33,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"e0f923ae-cbec-4d69-8fe6-00154f5eab1a"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       female\n","1         male\n","2         male\n","3         male\n","4         male\n","         ...  \n","1333      male\n","1334    female\n","1335    female\n","1336    female\n","1337    female\n","Name: sex, Length: 1338, dtype: object"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["insurance[\"smoker\"],insurance[\"smoker\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wn-XMDuzXN4L","executionInfo":{"status":"ok","timestamp":1704113509952,"user_tz":-330,"elapsed":30,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"cfbd2bfb-0eb0-4d3b-da7c-618d294617c8"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0       yes\n"," 1        no\n"," 2        no\n"," 3        no\n"," 4        no\n","        ... \n"," 1333     no\n"," 1334     no\n"," 1335     no\n"," 1336     no\n"," 1337    yes\n"," Name: smoker, Length: 1338, dtype: object,\n"," 0       yes\n"," 1        no\n"," 2        no\n"," 3        no\n"," 4        no\n","        ... \n"," 1333     no\n"," 1334     no\n"," 1335     no\n"," 1336     no\n"," 1337    yes\n"," Name: smoker, Length: 1338, dtype: object)"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["#lets try one hot encoding\n","insurance_one_hot=pd.get_dummies(insurance)\n","insurance_one_hot.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"ZIfftHYtXd0w","executionInfo":{"status":"ok","timestamp":1704113509952,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"24bd5d53-bc64-4d0b-a3cf-4d1a06383c2e"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children      charges  sex_female  sex_male  smoker_no  \\\n","0   19  27.900         0  16884.92400           1         0          0   \n","1   18  33.770         1   1725.55230           0         1          1   \n","2   28  33.000         3   4449.46200           0         1          1   \n","3   33  22.705         0  21984.47061           0         1          1   \n","4   32  28.880         0   3866.85520           0         1          1   \n","\n","   smoker_yes  region_northeast  region_northwest  region_southeast  \\\n","0           1                 0                 0                 0   \n","1           0                 0                 0                 1   \n","2           0                 0                 0                 1   \n","3           0                 0                 1                 0   \n","4           0                 0                 1                 0   \n","\n","   region_southwest  \n","0                 1  \n","1                 0  \n","2                 0  \n","3                 0  \n","4                 0  "],"text/html":["\n","  <div id=\"df-8138ee6b-36e1-46f1-a85a-499e244399fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>16884.92400</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>1725.55230</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>4449.46200</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>21984.47061</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>3866.85520</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8138ee6b-36e1-46f1-a85a-499e244399fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8138ee6b-36e1-46f1-a85a-499e244399fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8138ee6b-36e1-46f1-a85a-499e244399fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d295d068-9089-4e23-9365-704e96127350\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d295d068-9089-4e23-9365-704e96127350')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d295d068-9089-4e23-9365-704e96127350 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["#create X and Y values(features and labels)\n","X=insurance_one_hot.drop(\"charges\",axis=1)\n","Y=insurance_one_hot[\"charges\"]"],"metadata":{"id":"5rW38CJSZJJ3","executionInfo":{"status":"ok","timestamp":1704113510328,"user_tz":-330,"elapsed":402,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":["#view x\n","X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"TYjNzrLbZvpq","executionInfo":{"status":"ok","timestamp":1704113510336,"user_tz":-330,"elapsed":409,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d0f9121d-75a3-4792-b48f-e652ac5c05d4"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n","0   19  27.900         0           1         0          0           1   \n","1   18  33.770         1           0         1          1           0   \n","2   28  33.000         3           0         1          1           0   \n","3   33  22.705         0           0         1          1           0   \n","4   32  28.880         0           0         1          1           0   \n","\n","   region_northeast  region_northwest  region_southeast  region_southwest  \n","0                 0                 0                 0                 1  \n","1                 0                 0                 1                 0  \n","2                 0                 0                 1                 0  \n","3                 0                 1                 0                 0  \n","4                 0                 1                 0                 0  "],"text/html":["\n","  <div id=\"df-af10b459-45f3-4f60-9416-c4ee5a869386\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af10b459-45f3-4f60-9416-c4ee5a869386')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-af10b459-45f3-4f60-9416-c4ee5a869386 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-af10b459-45f3-4f60-9416-c4ee5a869386');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e72fe21-2688-4d53-b759-350595c60863\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e72fe21-2688-4d53-b759-350595c60863')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e72fe21-2688-4d53-b759-350595c60863 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["Y.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EKazCWbcZ0nZ","executionInfo":{"status":"ok","timestamp":1704113510336,"user_tz":-330,"elapsed":18,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"37a63e2a-f5d3-4ebe-b0a1-9b13c6e7544e"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    16884.92400\n","1     1725.55230\n","2     4449.46200\n","3    21984.47061\n","4     3866.85520\n","Name: charges, dtype: float64"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["#creating train and test data\n","from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=42)"],"metadata":{"id":"RnWk_LeXaOnS","executionInfo":{"status":"ok","timestamp":1704113511257,"user_tz":-330,"elapsed":936,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["#create a neural network model (simlilar to model_2)\n","tf.random.set_seed(42)\n","\n","#1.create a model\n","insurance_model=tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model\n","insurance_model.compile(loss=tf.keras.losses.mae,\n","                        optimizer=tf.keras.optimizers.SGD(),\n","                        metrics=[\"mae\"])\n","#3.fit the model:\n","insurance_model.fit(x_train,y_train,epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fx2LanXobu7w","executionInfo":{"status":"ok","timestamp":1704113518567,"user_tz":-330,"elapsed":7321,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"514fd6f8-d42c-4b27-f87e-2e107123c98c"},"execution_count":86,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","34/34 [==============================] - 0s 2ms/step - loss: 8703.4912 - mae: 8703.4912\n","Epoch 2/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7888.8311 - mae: 7888.8311\n","Epoch 3/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7591.1284 - mae: 7591.1284\n","Epoch 4/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7527.9292 - mae: 7527.9292\n","Epoch 5/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7625.6660 - mae: 7625.6660\n","Epoch 6/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7612.6274 - mae: 7612.6274\n","Epoch 7/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7568.0176 - mae: 7568.0176\n","Epoch 8/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7693.3823 - mae: 7693.3823\n","Epoch 9/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7586.5146 - mae: 7586.5146\n","Epoch 10/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7736.4194 - mae: 7736.4194\n","Epoch 11/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7444.6411 - mae: 7444.6411\n","Epoch 12/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7665.7529 - mae: 7665.7529\n","Epoch 13/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7578.2617 - mae: 7578.2617\n","Epoch 14/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7747.2368 - mae: 7747.2368\n","Epoch 15/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7575.1782 - mae: 7575.1782\n","Epoch 16/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7712.4292 - mae: 7712.4292\n","Epoch 17/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7569.6353 - mae: 7569.6353\n","Epoch 18/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7794.0254 - mae: 7794.0254\n","Epoch 19/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7495.0591 - mae: 7495.0591\n","Epoch 20/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7906.1362 - mae: 7906.1362\n","Epoch 21/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7366.2446 - mae: 7366.2446\n","Epoch 22/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7930.0562 - mae: 7930.0562\n","Epoch 23/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7661.7910 - mae: 7661.7910\n","Epoch 24/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7532.9585 - mae: 7532.9585\n","Epoch 25/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7821.5703 - mae: 7821.5703\n","Epoch 26/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7696.3662 - mae: 7696.3662\n","Epoch 27/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7644.6733 - mae: 7644.6733\n","Epoch 28/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7378.5303 - mae: 7378.5303\n","Epoch 29/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7664.4663 - mae: 7664.4663\n","Epoch 30/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7598.5869 - mae: 7598.5869\n","Epoch 31/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7551.6450 - mae: 7551.6450\n","Epoch 32/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7594.6543 - mae: 7594.6543\n","Epoch 33/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7361.7456 - mae: 7361.7456\n","Epoch 34/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7526.7856 - mae: 7526.7856\n","Epoch 35/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7524.6973 - mae: 7524.6973\n","Epoch 36/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7554.5889 - mae: 7554.5889\n","Epoch 37/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7657.9312 - mae: 7657.9312\n","Epoch 38/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7415.3589 - mae: 7415.3589\n","Epoch 39/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7490.7456 - mae: 7490.7456\n","Epoch 40/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7453.5605 - mae: 7453.5605\n","Epoch 41/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7743.5513 - mae: 7743.5513\n","Epoch 42/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7353.8110 - mae: 7353.8110\n","Epoch 43/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7426.4893 - mae: 7426.4893\n","Epoch 44/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7583.2710 - mae: 7583.2710\n","Epoch 45/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7519.3188 - mae: 7519.3188\n","Epoch 46/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7421.1602 - mae: 7421.1602\n","Epoch 47/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7523.3970 - mae: 7523.3970\n","Epoch 48/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7455.4839 - mae: 7455.4839\n","Epoch 49/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7558.8071 - mae: 7558.8071\n","Epoch 50/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7537.7607 - mae: 7537.7607\n","Epoch 51/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7408.9775 - mae: 7408.9775\n","Epoch 52/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7561.3516 - mae: 7561.3516\n","Epoch 53/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7575.5215 - mae: 7575.5215\n","Epoch 54/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7305.8237 - mae: 7305.8237\n","Epoch 55/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7480.8813 - mae: 7480.8813\n","Epoch 56/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7247.3687 - mae: 7247.3687\n","Epoch 57/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7459.9839 - mae: 7459.9839\n","Epoch 58/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7440.2227 - mae: 7440.2227\n","Epoch 59/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7611.8037 - mae: 7611.8037\n","Epoch 60/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7440.5347 - mae: 7440.5347\n","Epoch 61/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7484.5771 - mae: 7484.5771\n","Epoch 62/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7400.3223 - mae: 7400.3223\n","Epoch 63/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7430.8237 - mae: 7430.8237\n","Epoch 64/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7340.6533 - mae: 7340.6533\n","Epoch 65/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7489.4731 - mae: 7489.4731\n","Epoch 66/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7275.0195 - mae: 7275.0195\n","Epoch 67/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7334.1733 - mae: 7334.1733\n","Epoch 68/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7435.4316 - mae: 7435.4316\n","Epoch 69/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7357.2637 - mae: 7357.2637\n","Epoch 70/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7476.5498 - mae: 7476.5498\n","Epoch 71/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7304.7388 - mae: 7304.7388\n","Epoch 72/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7151.6265 - mae: 7151.6265\n","Epoch 73/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7394.2002 - mae: 7394.2002\n","Epoch 74/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7288.7168 - mae: 7288.7168\n","Epoch 75/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7273.2349 - mae: 7273.2349\n","Epoch 76/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7149.1836 - mae: 7149.1836\n","Epoch 77/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7349.7817 - mae: 7349.7817\n","Epoch 78/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7113.4688 - mae: 7113.4688\n","Epoch 79/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7494.8594 - mae: 7494.8594\n","Epoch 80/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7274.1089 - mae: 7274.1089\n","Epoch 81/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7174.2979 - mae: 7174.2979\n","Epoch 82/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7216.9688 - mae: 7216.9688\n","Epoch 83/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7271.3286 - mae: 7271.3286\n","Epoch 84/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7419.6001 - mae: 7419.6001\n","Epoch 85/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7432.0732 - mae: 7432.0732\n","Epoch 86/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7343.6763 - mae: 7343.6763\n","Epoch 87/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7203.4805 - mae: 7203.4805\n","Epoch 88/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7379.6162 - mae: 7379.6162\n","Epoch 89/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7504.0020 - mae: 7504.0020\n","Epoch 90/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7180.6377 - mae: 7180.6377\n","Epoch 91/100\n","34/34 [==============================] - 0s 1ms/step - loss: 7191.2002 - mae: 7191.2002\n","Epoch 92/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7278.3643 - mae: 7278.3643\n","Epoch 93/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7537.9316 - mae: 7537.9316\n","Epoch 94/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7158.7583 - mae: 7158.7583\n","Epoch 95/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7352.7759 - mae: 7352.7759\n","Epoch 96/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7106.2866 - mae: 7106.2866\n","Epoch 97/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7085.4785 - mae: 7085.4785\n","Epoch 98/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7403.6631 - mae: 7403.6631\n","Epoch 99/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7384.2012 - mae: 7384.2012\n","Epoch 100/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7291.3213 - mae: 7291.3213\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc5ddd2140>"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["# Check the results of the insurance model\n","insurance_model.evaluate(x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C5prrXkIdz-0","executionInfo":{"status":"ok","timestamp":1704113518567,"user_tz":-330,"elapsed":32,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"59bebb7e-6a14-4b2a-e6a2-152134ebc417"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 7026.4585 - mae: 7026.4585\n"]},{"output_type":"execute_result","data":{"text/plain":["[7026.45849609375, 7026.45849609375]"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["y_train.median(),y_train.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KPzF1IKXeVSC","executionInfo":{"status":"ok","timestamp":1704113518567,"user_tz":-330,"elapsed":22,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"f01c5ce4-d9e3-4cb1-803d-9c10b8db79a9"},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(9575.4421, 13346.089736364485)"]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["Our model didn't perform very well, let's try a bigger model.\n","\n","We'll try 3 things:\n","- Increasing the number of layers (2 -> 3).\n","- Increasing the number of units in each layer (except for the output layer).\n","- Changing the optimizer (from SGD to Adam).\n","\n","Everything else will stay the same."],"metadata":{"id":"Q36I2icxecXw"}},{"cell_type":"code","source":["#creating the model 2\n","tf.random.set_seed(42)\n","\n","#1.create a model\n","insurance_model_2=tf.keras.Sequential([\n","    tf.keras.layers.Dense(100),\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model\n","insurance_model_2.compile(loss=tf.keras.losses.mae,\n","                        optimizer=tf.keras.optimizers.Adam(),\n","                        metrics=[\"mae\"])\n","#3.fit the model:\n","insurance_model_2.fit(x_train,y_train,epochs=100,verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZYtPuL17eyON","executionInfo":{"status":"ok","timestamp":1704113529916,"user_tz":-330,"elapsed":11367,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"4a7b6a5d-5948-47ea-b4d1-91ed78c7f2b1"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","34/34 [==============================] - 1s 3ms/step - loss: 13310.5391 - mae: 13310.5391\n","Epoch 2/100\n","34/34 [==============================] - 0s 3ms/step - loss: 13143.1338 - mae: 13143.1338\n","Epoch 3/100\n","34/34 [==============================] - 0s 3ms/step - loss: 12794.5547 - mae: 12794.5547\n","Epoch 4/100\n","34/34 [==============================] - 0s 3ms/step - loss: 12107.6787 - mae: 12107.6787\n","Epoch 5/100\n","34/34 [==============================] - 0s 3ms/step - loss: 10963.8125 - mae: 10963.8125\n","Epoch 6/100\n","34/34 [==============================] - 0s 4ms/step - loss: 9517.0234 - mae: 9517.0234\n","Epoch 7/100\n","34/34 [==============================] - 0s 3ms/step - loss: 8196.0205 - mae: 8196.0205\n","Epoch 8/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7560.8564 - mae: 7560.8564\n","Epoch 9/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7452.3887 - mae: 7452.3887\n","Epoch 10/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7431.4185 - mae: 7431.4185\n","Epoch 11/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7413.1416 - mae: 7413.1416\n","Epoch 12/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7391.3423 - mae: 7391.3423\n","Epoch 13/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7370.9932 - mae: 7370.9932\n","Epoch 14/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7349.0757 - mae: 7349.0757\n","Epoch 15/100\n","34/34 [==============================] - 0s 4ms/step - loss: 7330.2295 - mae: 7330.2295\n","Epoch 16/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7308.0352 - mae: 7308.0352\n","Epoch 17/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7288.0386 - mae: 7288.0386\n","Epoch 18/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7264.8828 - mae: 7264.8828\n","Epoch 19/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7242.9585 - mae: 7242.9585\n","Epoch 20/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7219.9277 - mae: 7219.9277\n","Epoch 21/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7200.8555 - mae: 7200.8555\n","Epoch 22/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7174.7568 - mae: 7174.7568\n","Epoch 23/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7150.7178 - mae: 7150.7178\n","Epoch 24/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7126.0098 - mae: 7126.0098\n","Epoch 25/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7108.9570 - mae: 7108.9570\n","Epoch 26/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7077.0977 - mae: 7077.0977\n","Epoch 27/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7049.3047 - mae: 7049.3047\n","Epoch 28/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7021.7988 - mae: 7021.7988\n","Epoch 29/100\n","34/34 [==============================] - 0s 3ms/step - loss: 6994.1313 - mae: 6994.1313\n","Epoch 30/100\n","34/34 [==============================] - 0s 3ms/step - loss: 6967.9653 - mae: 6967.9653\n","Epoch 31/100\n","34/34 [==============================] - 0s 3ms/step - loss: 6937.1758 - mae: 6937.1758\n","Epoch 32/100\n","34/34 [==============================] - 0s 3ms/step - loss: 6910.4746 - mae: 6910.4746\n","Epoch 33/100\n","34/34 [==============================] - 0s 3ms/step - loss: 6879.1953 - mae: 6879.1953\n","Epoch 34/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6847.5938 - mae: 6847.5938\n","Epoch 35/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6815.3833 - mae: 6815.3833\n","Epoch 36/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6781.7314 - mae: 6781.7314\n","Epoch 37/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6746.5381 - mae: 6746.5381\n","Epoch 38/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6714.5195 - mae: 6714.5195\n","Epoch 39/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6675.4199 - mae: 6675.4199\n","Epoch 40/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6640.2183 - mae: 6640.2183\n","Epoch 41/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6606.0103 - mae: 6606.0103\n","Epoch 42/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6576.9604 - mae: 6576.9604\n","Epoch 43/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6544.4844 - mae: 6544.4844\n","Epoch 44/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6517.3730 - mae: 6517.3730\n","Epoch 45/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6497.7021 - mae: 6497.7021\n","Epoch 46/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6478.3438 - mae: 6478.3438\n","Epoch 47/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6461.1216 - mae: 6461.1216\n","Epoch 48/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6444.0942 - mae: 6444.0942\n","Epoch 49/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6430.5225 - mae: 6430.5225\n","Epoch 50/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6417.1733 - mae: 6417.1733\n","Epoch 51/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6403.3599 - mae: 6403.3599\n","Epoch 52/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6392.3057 - mae: 6392.3057\n","Epoch 53/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6377.3257 - mae: 6377.3257\n","Epoch 54/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6363.2563 - mae: 6363.2563\n","Epoch 55/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6349.6836 - mae: 6349.6836\n","Epoch 56/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6335.3477 - mae: 6335.3477\n","Epoch 57/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6323.0029 - mae: 6323.0029\n","Epoch 58/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6308.2261 - mae: 6308.2261\n","Epoch 59/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6293.4238 - mae: 6293.4238\n","Epoch 60/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6282.9946 - mae: 6282.9946\n","Epoch 61/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6263.0264 - mae: 6263.0264\n","Epoch 62/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6250.6899 - mae: 6250.6899\n","Epoch 63/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6232.2896 - mae: 6232.2896\n","Epoch 64/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6216.7627 - mae: 6216.7627\n","Epoch 65/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6199.1509 - mae: 6199.1509\n","Epoch 66/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6182.1567 - mae: 6182.1567\n","Epoch 67/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6169.6313 - mae: 6169.6313\n","Epoch 68/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6146.4932 - mae: 6146.4932\n","Epoch 69/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6131.0444 - mae: 6131.0444\n","Epoch 70/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6110.7729 - mae: 6110.7729\n","Epoch 71/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6091.3867 - mae: 6091.3867\n","Epoch 72/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6072.8730 - mae: 6072.8730\n","Epoch 73/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6058.5361 - mae: 6058.5361\n","Epoch 74/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6030.6851 - mae: 6030.6851\n","Epoch 75/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6009.5483 - mae: 6009.5483\n","Epoch 76/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5995.2280 - mae: 5995.2280\n","Epoch 77/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5963.4590 - mae: 5963.4590\n","Epoch 78/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5940.2861 - mae: 5940.2861\n","Epoch 79/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5915.6816 - mae: 5915.6816\n","Epoch 80/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5889.1885 - mae: 5889.1885\n","Epoch 81/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5863.5356 - mae: 5863.5356\n","Epoch 82/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5836.0352 - mae: 5836.0352\n","Epoch 83/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5808.2446 - mae: 5808.2446\n","Epoch 84/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5775.4814 - mae: 5775.4814\n","Epoch 85/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5748.7759 - mae: 5748.7759\n","Epoch 86/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5715.7393 - mae: 5715.7393\n","Epoch 87/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5680.0361 - mae: 5680.0361\n","Epoch 88/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5646.1885 - mae: 5646.1885\n","Epoch 89/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5607.8794 - mae: 5607.8794\n","Epoch 90/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5567.8232 - mae: 5567.8232\n","Epoch 91/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5533.3130 - mae: 5533.3130\n","Epoch 92/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5484.7515 - mae: 5484.7515\n","Epoch 93/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5443.3662 - mae: 5443.3662\n","Epoch 94/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5398.9536 - mae: 5398.9536\n","Epoch 95/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5347.6792 - mae: 5347.6792\n","Epoch 96/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5305.0469 - mae: 5305.0469\n","Epoch 97/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5252.6406 - mae: 5252.6406\n","Epoch 98/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5191.7017 - mae: 5191.7017\n","Epoch 99/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5135.5435 - mae: 5135.5435\n","Epoch 100/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5082.0723 - mae: 5082.0723\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc62e37580>"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["insurance_model_2.evaluate(x_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-iT-56Dog1o4","executionInfo":{"status":"ok","timestamp":1704113529917,"user_tz":-330,"elapsed":13,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"469ab4ba-2746-409d-9ed9-70213dacd2eb"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 4949.1299 - mae: 4949.1299\n"]},{"output_type":"execute_result","data":{"text/plain":["[4949.1298828125, 4949.1298828125]"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["#creating model 3\n","tf.random.set_seed(42)\n","\n","#1.create a model\n","insurance_model_3=tf.keras.Sequential([\n","    tf.keras.layers.Dense(100),\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the model\n","insurance_model_3.compile(loss=tf.keras.losses.mae,\n","                        optimizer=tf.keras.optimizers.Adam(),\n","                        metrics=[\"mae\"])\n","#3.fit the model:\n","history=insurance_model_3.fit(x_train,y_train,epochs=200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JSUXuy7agUzJ","executionInfo":{"status":"ok","timestamp":1704113551736,"user_tz":-330,"elapsed":21829,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"2d796132-1616-4a71-b92d-df70ad5044bb"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","34/34 [==============================] - 1s 2ms/step - loss: 13303.1465 - mae: 13303.1465\n","Epoch 2/200\n","34/34 [==============================] - 0s 2ms/step - loss: 13128.2695 - mae: 13128.2695\n","Epoch 3/200\n","34/34 [==============================] - 0s 2ms/step - loss: 12779.0371 - mae: 12779.0371\n","Epoch 4/200\n","34/34 [==============================] - 0s 2ms/step - loss: 12100.0117 - mae: 12100.0117\n","Epoch 5/200\n","34/34 [==============================] - 0s 2ms/step - loss: 10962.8477 - mae: 10962.8477\n","Epoch 6/200\n","34/34 [==============================] - 0s 2ms/step - loss: 9508.2246 - mae: 9508.2246\n","Epoch 7/200\n","34/34 [==============================] - 0s 2ms/step - loss: 8170.0264 - mae: 8170.0264\n","Epoch 8/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7526.9546 - mae: 7526.9546\n","Epoch 9/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7421.9170 - mae: 7421.9170\n","Epoch 10/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7401.4849 - mae: 7401.4849\n","Epoch 11/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7382.6313 - mae: 7382.6313\n","Epoch 12/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7360.0205 - mae: 7360.0205\n","Epoch 13/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7339.2280 - mae: 7339.2280\n","Epoch 14/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7316.4253 - mae: 7316.4253\n","Epoch 15/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7297.1543 - mae: 7297.1543\n","Epoch 16/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7273.9712 - mae: 7273.9712\n","Epoch 17/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7253.1479 - mae: 7253.1479\n","Epoch 18/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7229.0889 - mae: 7229.0889\n","Epoch 19/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7205.7432 - mae: 7205.7432\n","Epoch 20/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7180.9365 - mae: 7180.9365\n","Epoch 21/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7161.2275 - mae: 7161.2275\n","Epoch 22/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7131.2041 - mae: 7131.2041\n","Epoch 23/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7104.4487 - mae: 7104.4487\n","Epoch 24/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7077.2695 - mae: 7077.2695\n","Epoch 25/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7055.7251 - mae: 7055.7251\n","Epoch 26/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7022.7734 - mae: 7022.7734\n","Epoch 27/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6992.0283 - mae: 6992.0283\n","Epoch 28/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6960.7119 - mae: 6960.7119\n","Epoch 29/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6929.3179 - mae: 6929.3179\n","Epoch 30/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6899.8262 - mae: 6899.8262\n","Epoch 31/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6865.7158 - mae: 6865.7158\n","Epoch 32/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6833.8994 - mae: 6833.8994\n","Epoch 33/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6798.6001 - mae: 6798.6001\n","Epoch 34/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6763.3496 - mae: 6763.3496\n","Epoch 35/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6725.6768 - mae: 6725.6768\n","Epoch 36/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6688.6143 - mae: 6688.6143\n","Epoch 37/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6650.1084 - mae: 6650.1084\n","Epoch 38/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6618.3267 - mae: 6618.3267\n","Epoch 39/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6579.6011 - mae: 6579.6011\n","Epoch 40/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6549.6035 - mae: 6549.6035\n","Epoch 41/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6525.8647 - mae: 6525.8647\n","Epoch 42/200\n","34/34 [==============================] - 0s 4ms/step - loss: 6503.7114 - mae: 6503.7114\n","Epoch 43/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6483.9766 - mae: 6483.9766\n","Epoch 44/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6467.3125 - mae: 6467.3125\n","Epoch 45/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6456.6616 - mae: 6456.6616\n","Epoch 46/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6440.0566 - mae: 6440.0566\n","Epoch 47/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6424.9746 - mae: 6424.9746\n","Epoch 48/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6410.5620 - mae: 6410.5625\n","Epoch 49/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6398.6265 - mae: 6398.6265\n","Epoch 50/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6384.4795 - mae: 6384.4795\n","Epoch 51/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6370.3433 - mae: 6370.3433\n","Epoch 52/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6356.9033 - mae: 6356.9033\n","Epoch 53/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6342.0806 - mae: 6342.0806\n","Epoch 54/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6327.7271 - mae: 6327.7271\n","Epoch 55/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6313.6177 - mae: 6313.6177\n","Epoch 56/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6298.9180 - mae: 6298.9180\n","Epoch 57/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6284.3926 - mae: 6284.3926\n","Epoch 58/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6270.3364 - mae: 6270.3364\n","Epoch 59/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6253.2915 - mae: 6253.2915\n","Epoch 60/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6241.7446 - mae: 6241.7446\n","Epoch 61/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6219.8613 - mae: 6219.8613\n","Epoch 62/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6207.9336 - mae: 6207.9336\n","Epoch 63/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6187.1567 - mae: 6187.1567\n","Epoch 64/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6168.5625 - mae: 6168.5625\n","Epoch 65/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6150.3643 - mae: 6150.3643\n","Epoch 66/200\n","34/34 [==============================] - 0s 4ms/step - loss: 6131.2188 - mae: 6131.2188\n","Epoch 67/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6117.5205 - mae: 6117.5205\n","Epoch 68/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6092.4512 - mae: 6092.4512\n","Epoch 69/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6074.9741 - mae: 6074.9741\n","Epoch 70/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6053.4429 - mae: 6053.4429\n","Epoch 71/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6030.7896 - mae: 6030.7896\n","Epoch 72/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6009.5552 - mae: 6009.5552\n","Epoch 73/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5993.3804 - mae: 5993.3804\n","Epoch 74/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5961.2129 - mae: 5961.2129\n","Epoch 75/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5938.5010 - mae: 5938.5010\n","Epoch 76/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5919.0630 - mae: 5919.0630\n","Epoch 77/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5885.4727 - mae: 5885.4727\n","Epoch 78/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5859.2319 - mae: 5859.2319\n","Epoch 79/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5831.6157 - mae: 5831.6157\n","Epoch 80/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5800.2788 - mae: 5800.2788\n","Epoch 81/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5771.6343 - mae: 5771.6343\n","Epoch 82/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5738.1685 - mae: 5738.1685\n","Epoch 83/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5706.9717 - mae: 5706.9717\n","Epoch 84/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5670.5659 - mae: 5670.5659\n","Epoch 85/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5639.3975 - mae: 5639.3975\n","Epoch 86/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5601.3911 - mae: 5601.3911\n","Epoch 87/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5559.0464 - mae: 5559.0464\n","Epoch 88/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5518.3569 - mae: 5518.3569\n","Epoch 89/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5474.3433 - mae: 5474.3433\n","Epoch 90/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5426.7529 - mae: 5426.7529\n","Epoch 91/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5384.9209 - mae: 5384.9209\n","Epoch 92/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5333.1338 - mae: 5333.1338\n","Epoch 93/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5283.4829 - mae: 5283.4829\n","Epoch 94/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5230.2549 - mae: 5230.2549\n","Epoch 95/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5172.8721 - mae: 5172.8721\n","Epoch 96/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5122.0815 - mae: 5122.0815\n","Epoch 97/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5061.4751 - mae: 5061.4751\n","Epoch 98/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4994.0093 - mae: 4994.0093\n","Epoch 99/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4926.9580 - mae: 4926.9580\n","Epoch 100/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4867.8838 - mae: 4867.8838\n","Epoch 101/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4787.8145 - mae: 4787.8145\n","Epoch 102/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4709.2109 - mae: 4709.2109\n","Epoch 103/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4633.3979 - mae: 4633.3979\n","Epoch 104/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4548.1025 - mae: 4548.1025\n","Epoch 105/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4458.4023 - mae: 4458.4023\n","Epoch 106/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4381.2969 - mae: 4381.2969\n","Epoch 107/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4301.7993 - mae: 4301.7993\n","Epoch 108/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4222.2607 - mae: 4222.2607\n","Epoch 109/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4145.5840 - mae: 4145.5840\n","Epoch 110/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4076.0818 - mae: 4076.0818\n","Epoch 111/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4013.9426 - mae: 4013.9426\n","Epoch 112/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3974.6279 - mae: 3974.6279\n","Epoch 113/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3936.8496 - mae: 3936.8496\n","Epoch 114/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3916.6943 - mae: 3916.6943\n","Epoch 115/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3882.5771 - mae: 3882.5771\n","Epoch 116/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3872.9946 - mae: 3872.9946\n","Epoch 117/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3860.4153 - mae: 3860.4153\n","Epoch 118/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3845.6970 - mae: 3845.6970\n","Epoch 119/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3830.7498 - mae: 3830.7498\n","Epoch 120/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3818.7629 - mae: 3818.7629\n","Epoch 121/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3814.2451 - mae: 3814.2451\n","Epoch 122/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3809.5593 - mae: 3809.5593\n","Epoch 123/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3801.1323 - mae: 3801.1323\n","Epoch 124/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3798.3147 - mae: 3798.3147\n","Epoch 125/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3788.7449 - mae: 3788.7449\n","Epoch 126/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3797.3804 - mae: 3797.3804\n","Epoch 127/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3790.1711 - mae: 3790.1711\n","Epoch 128/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3786.3735 - mae: 3786.3735\n","Epoch 129/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3794.5979 - mae: 3794.5979\n","Epoch 130/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3783.5559 - mae: 3783.5559\n","Epoch 131/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3776.8477 - mae: 3776.8477\n","Epoch 132/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3770.4922 - mae: 3770.4922\n","Epoch 133/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3766.9067 - mae: 3766.9067\n","Epoch 134/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3768.6536 - mae: 3768.6536\n","Epoch 135/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3764.0505 - mae: 3764.0505\n","Epoch 136/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3762.7141 - mae: 3762.7141\n","Epoch 137/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3771.0896 - mae: 3771.0896\n","Epoch 138/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3781.2356 - mae: 3781.2356\n","Epoch 139/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3758.4067 - mae: 3758.4067\n","Epoch 140/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3759.2666 - mae: 3759.2666\n","Epoch 141/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3761.0251 - mae: 3761.0251\n","Epoch 142/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3763.3535 - mae: 3763.3535\n","Epoch 143/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3750.2351 - mae: 3750.2351\n","Epoch 144/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3747.7361 - mae: 3747.7361\n","Epoch 145/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3748.1592 - mae: 3748.1592\n","Epoch 146/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3753.1709 - mae: 3753.1709\n","Epoch 147/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3749.7175 - mae: 3749.7175\n","Epoch 148/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3753.6262 - mae: 3753.6262\n","Epoch 149/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3740.9199 - mae: 3740.9199\n","Epoch 150/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3736.3110 - mae: 3736.3110\n","Epoch 151/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3738.5088 - mae: 3738.5088\n","Epoch 152/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3739.4766 - mae: 3739.4766\n","Epoch 153/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3743.4253 - mae: 3743.4253\n","Epoch 154/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3734.8030 - mae: 3734.8030\n","Epoch 155/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3736.7156 - mae: 3736.7156\n","Epoch 156/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3736.0566 - mae: 3736.0566\n","Epoch 157/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3732.3059 - mae: 3732.3059\n","Epoch 158/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3727.2610 - mae: 3727.2610\n","Epoch 159/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3725.2485 - mae: 3725.2485\n","Epoch 160/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3731.8569 - mae: 3731.8569\n","Epoch 161/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3726.7146 - mae: 3726.7146\n","Epoch 162/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3722.2781 - mae: 3722.2781\n","Epoch 163/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3721.1196 - mae: 3721.1196\n","Epoch 164/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3725.4512 - mae: 3725.4512\n","Epoch 165/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3716.0769 - mae: 3716.0769\n","Epoch 166/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3718.5364 - mae: 3718.5364\n","Epoch 167/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3719.5413 - mae: 3719.5413\n","Epoch 168/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3713.9800 - mae: 3713.9800\n","Epoch 169/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3712.9250 - mae: 3712.9250\n","Epoch 170/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3706.4355 - mae: 3706.4355\n","Epoch 171/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3707.6667 - mae: 3707.6667\n","Epoch 172/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3710.4800 - mae: 3710.4800\n","Epoch 173/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3702.5312 - mae: 3702.5312\n","Epoch 174/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3709.3865 - mae: 3709.3865\n","Epoch 175/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3711.0342 - mae: 3711.0342\n","Epoch 176/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3705.0774 - mae: 3705.0774\n","Epoch 177/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3699.2795 - mae: 3699.2795\n","Epoch 178/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3694.3018 - mae: 3694.3018\n","Epoch 179/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3707.4880 - mae: 3707.4880\n","Epoch 180/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3708.3201 - mae: 3708.3201\n","Epoch 181/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3695.3374 - mae: 3695.3374\n","Epoch 182/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3692.0427 - mae: 3692.0427\n","Epoch 183/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3690.5005 - mae: 3690.5005\n","Epoch 184/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3697.7405 - mae: 3697.7405\n","Epoch 185/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3693.7869 - mae: 3693.7869\n","Epoch 186/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3696.1406 - mae: 3696.1406\n","Epoch 187/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3686.2188 - mae: 3686.2188\n","Epoch 188/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3693.3362 - mae: 3693.3362\n","Epoch 189/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3683.3906 - mae: 3683.3906\n","Epoch 190/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3682.1677 - mae: 3682.1677\n","Epoch 191/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3696.3186 - mae: 3696.3186\n","Epoch 192/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3684.5945 - mae: 3684.5945\n","Epoch 193/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3674.7534 - mae: 3674.7534\n","Epoch 194/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3675.9036 - mae: 3675.9036\n","Epoch 195/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3672.8767 - mae: 3672.8767\n","Epoch 196/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3681.7190 - mae: 3681.7190\n","Epoch 197/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3666.3167 - mae: 3666.3167\n","Epoch 198/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3671.4890 - mae: 3671.4890\n","Epoch 199/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3680.1409 - mae: 3680.1409\n","Epoch 200/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3667.8328 - mae: 3667.8328\n"]}]},{"cell_type":"code","source":["insurance_model_3.evaluate(x_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3RYVr0hZhTz6","executionInfo":{"status":"ok","timestamp":1704113551737,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"1c86b520-a6d3-465f-bd32-b0685fd1a82c"},"execution_count":92,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3492.1099 - mae: 3492.1099\n"]},{"output_type":"execute_result","data":{"text/plain":["[3492.10986328125, 3492.10986328125]"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["#plot history(also known as a loss curve or a training curve)\n","pd.DataFrame(history.history).plot()\n","plt.ylabel(\"loss\")\n","plt.xlabel(\"epochs\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"WyZol-j_h5-2","executionInfo":{"status":"ok","timestamp":1704113552280,"user_tz":-330,"elapsed":563,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"6633e60f-5b4f-4985-963a-2edcd96b9582"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'epochs')"]},"metadata":{},"execution_count":93},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[" 🤔 **Question:** How long should you train for?\n","\n","> It depends on what problem you're working on. Sometimes training won't take very long, other times it'll take longer than you expect. A common method is to set your model training for a very long time (e.g. 1000's of epochs) but set it up with an [EarlyStopping callback](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/EarlyStopping) so it stops automatically when it stops improving. We'll see this in another module.\n","\n","Let's train the same model as above for a little longer. We can do this but calling fit on it again."],"metadata":{"id":"xjIxTUpoigDA"}},{"cell_type":"markdown","source":["## Preprocessing data (normalization and standardization)"],"metadata":{"id":"kL9rLHP6jEb5"}},{"cell_type":"code","source":["X[\"age\"].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"y9IjkeCJEPkR","executionInfo":{"status":"ok","timestamp":1704113605667,"user_tz":-330,"elapsed":1099,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"8cbcea88-77db-452e-9ff6-d9e20d3b5dee"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Frequency'>"]},"metadata":{},"execution_count":95},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X[\"bmi\"].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"Drg5kxTZFhzG","executionInfo":{"status":"ok","timestamp":1704113652723,"user_tz":-330,"elapsed":1084,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"24e69ea2-bfef-43e6-cde1-41efb5f08d8d"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Frequency'>"]},"metadata":{},"execution_count":98},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n"],"metadata":{"id":"sDU_39DnDEgw","executionInfo":{"status":"ok","timestamp":1704113659783,"user_tz":-330,"elapsed":8,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":99,"outputs":[]},{"cell_type":"code","source":["#read in the insurance dataframe:\n","insurance=pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")\n","insurance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"lAlolY79DSQN","executionInfo":{"status":"ok","timestamp":1704113624761,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"5753b134-2595-42c8-8dff-3b766d4f0ec9"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-04e5936c-79b0-4e50-b8c8-b64d34a26ae2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04e5936c-79b0-4e50-b8c8-b64d34a26ae2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-04e5936c-79b0-4e50-b8c8-b64d34a26ae2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-04e5936c-79b0-4e50-b8c8-b64d34a26ae2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8c93b556-da91-4751-a2c5-6812b269e19b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c93b556-da91-4751-a2c5-6812b269e19b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8c93b556-da91-4751-a2c5-6812b269e19b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e24786f0-3534-474f-b8c4-713888d867d9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('insurance')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e24786f0-3534-474f-b8c4-713888d867d9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('insurance');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["to do preprocess our data we need to import som,e modules from sklearn library\n"],"metadata":{"id":"T8o482nsD0i_"}},{"cell_type":"code","source":["from sklearn.compose import make_column_transformer\n","from sklearn.preprocessing import MinMaxScaler,OneHotEncoder\n","from sklearn.model_selection import train_test_split\n","\n","#create a column transformer\n","ct=make_column_transformer(\n","    (MinMaxScaler(),[\"age\",\"bmi\",\"children\"]),#turn all values in these colummns between a range\n","    (OneHotEncoder(handle_unknown=\"ignore\"),[\"sex\",\"smoker\",\"region\"])\n",")\n","\n","#create X & Y\n","X=insurance.drop(\"charges\",axis=1)\n","Y=insurance[\"charges\"]\n","\n","#build our train and test sets\n","x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=42)\n","\n","#fit the column transformer to our training model\n","ct.fit(x_train)\n","\n","#transform training and test data with normalization(minMaxScalar())and OneHotEncoder\n","x_train_normal=ct.transform(x_train)\n","x_test_normal=ct.transform(x_test)"],"metadata":{"id":"uY1agTHQD0f1","executionInfo":{"status":"ok","timestamp":1704116958986,"user_tz":-330,"elapsed":8,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":["#what does our data look like now?\n","x_train.loc[0]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uBRSzr34Rvxk","executionInfo":{"status":"ok","timestamp":1704116969895,"user_tz":-330,"elapsed":455,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"a7bf5799-d36b-406a-d4d4-b1537a32a382"},"execution_count":105,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                19\n","sex            female\n","bmi              27.9\n","children            0\n","smoker            yes\n","region      southwest\n","Name: 0, dtype: object"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["x_train_normal[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6KwrGPasSVvv","executionInfo":{"status":"ok","timestamp":1704116990831,"user_tz":-330,"elapsed":391,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"3dca7f20-0608-436c-a590-43ed78e970db"},"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.60869565, 0.10734463, 0.4       , 1.        , 0.        ,\n","       1.        , 0.        , 0.        , 1.        , 0.        ,\n","       0.        ])"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["x_train.shape,x_train_normal.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DtbUwSsSSa2r","executionInfo":{"status":"ok","timestamp":1704117010308,"user_tz":-330,"elapsed":469,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d3719465-0ac4-458b-9e58-34389d1a5263"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1070, 6), (1070, 11))"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["#build neural network model to fit our normalized data\n","tf.random.set_seed(42)\n","\n","#1.create a model :\n","insurance_model_4=tf.keras.Sequential([\n","    tf.keras.layers.Dense(100),\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","#2.compile the mdoel:\n","insurance_model_4.compile(loss=tf.keras.losses.mae,\n","                          optimizer=tf.keras.optimizers.Adam(),\n","                          metrics=[\"mae\"])\n","\n","#fit the model:\n","insurance_model_4.fit(x_train_normal,y_train,epochs=100)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWtxpiVDSfnC","executionInfo":{"status":"ok","timestamp":1704117867923,"user_tz":-330,"elapsed":11723,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"55a6d7fe-ddf1-45f4-d019-2758329c8833"},"execution_count":112,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","34/34 [==============================] - 1s 2ms/step - loss: 13344.2314 - mae: 13344.2314\n","Epoch 2/100\n","34/34 [==============================] - 0s 2ms/step - loss: 13336.2197 - mae: 13336.2197\n","Epoch 3/100\n","34/34 [==============================] - 0s 2ms/step - loss: 13316.9414 - mae: 13316.9414\n","Epoch 4/100\n","34/34 [==============================] - 0s 2ms/step - loss: 13276.2080 - mae: 13276.2080\n","Epoch 5/100\n","34/34 [==============================] - 0s 2ms/step - loss: 13202.2500 - mae: 13202.2500\n","Epoch 6/100\n","34/34 [==============================] - 0s 2ms/step - loss: 13083.2383 - mae: 13083.2383\n","Epoch 7/100\n","34/34 [==============================] - 0s 2ms/step - loss: 12908.6426 - mae: 12908.6426\n","Epoch 8/100\n","34/34 [==============================] - 0s 2ms/step - loss: 12668.3184 - mae: 12668.3184\n","Epoch 9/100\n","34/34 [==============================] - 0s 2ms/step - loss: 12352.0459 - mae: 12352.0459\n","Epoch 10/100\n","34/34 [==============================] - 0s 2ms/step - loss: 11954.3955 - mae: 11954.3955\n","Epoch 11/100\n","34/34 [==============================] - 0s 2ms/step - loss: 11483.4775 - mae: 11483.4775\n","Epoch 12/100\n","34/34 [==============================] - 0s 2ms/step - loss: 10976.1367 - mae: 10976.1367\n","Epoch 13/100\n","34/34 [==============================] - 0s 2ms/step - loss: 10473.5156 - mae: 10473.5156\n","Epoch 14/100\n","34/34 [==============================] - 0s 2ms/step - loss: 9974.0566 - mae: 9974.0566\n","Epoch 15/100\n","34/34 [==============================] - 0s 2ms/step - loss: 9501.0029 - mae: 9501.0029\n","Epoch 16/100\n","34/34 [==============================] - 0s 2ms/step - loss: 9080.2861 - mae: 9080.2861\n","Epoch 17/100\n","34/34 [==============================] - 0s 2ms/step - loss: 8730.3262 - mae: 8730.3262\n","Epoch 18/100\n","34/34 [==============================] - 0s 2ms/step - loss: 8447.0479 - mae: 8447.0479\n","Epoch 19/100\n","34/34 [==============================] - 0s 2ms/step - loss: 8230.4883 - mae: 8230.4883\n","Epoch 20/100\n","34/34 [==============================] - 0s 2ms/step - loss: 8083.9019 - mae: 8083.9019\n","Epoch 21/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7974.1963 - mae: 7974.1963\n","Epoch 22/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7899.1699 - mae: 7899.1699\n","Epoch 23/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7840.3999 - mae: 7840.3999\n","Epoch 24/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7787.5200 - mae: 7787.5200\n","Epoch 25/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7748.6416 - mae: 7748.6416\n","Epoch 26/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7696.8457 - mae: 7696.8457\n","Epoch 27/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7654.6641 - mae: 7654.6641\n","Epoch 28/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7612.0410 - mae: 7612.0410\n","Epoch 29/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7569.3403 - mae: 7569.3403\n","Epoch 30/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7525.6006 - mae: 7525.6006\n","Epoch 31/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7481.4331 - mae: 7481.4331\n","Epoch 32/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7437.0308 - mae: 7437.0308\n","Epoch 33/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7392.3560 - mae: 7392.3560\n","Epoch 34/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7343.7847 - mae: 7343.7847\n","Epoch 35/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7296.5688 - mae: 7296.5688\n","Epoch 36/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7245.9600 - mae: 7245.9600\n","Epoch 37/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7195.1431 - mae: 7195.1431\n","Epoch 38/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7143.7446 - mae: 7143.7446\n","Epoch 39/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7088.5132 - mae: 7088.5132\n","Epoch 40/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7032.6084 - mae: 7032.6084\n","Epoch 41/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6975.5908 - mae: 6975.5908\n","Epoch 42/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6916.1270 - mae: 6916.1270\n","Epoch 43/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6852.9746 - mae: 6852.9746\n","Epoch 44/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6786.0361 - mae: 6786.0361\n","Epoch 45/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6718.0742 - mae: 6718.0742\n","Epoch 46/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6648.3945 - mae: 6648.3945\n","Epoch 47/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6576.2886 - mae: 6576.2886\n","Epoch 48/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6496.7549 - mae: 6496.7549\n","Epoch 49/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6416.9321 - mae: 6416.9321\n","Epoch 50/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6330.3477 - mae: 6330.3477\n","Epoch 51/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6244.6875 - mae: 6244.6875\n","Epoch 52/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6150.8408 - mae: 6150.8408\n","Epoch 53/100\n","34/34 [==============================] - 0s 2ms/step - loss: 6053.8198 - mae: 6053.8198\n","Epoch 54/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5953.9575 - mae: 5953.9575\n","Epoch 55/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5845.6216 - mae: 5845.6216\n","Epoch 56/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5736.1978 - mae: 5736.1978\n","Epoch 57/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5619.4507 - mae: 5619.4507\n","Epoch 58/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5501.7173 - mae: 5501.7173\n","Epoch 59/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5381.8213 - mae: 5381.8213\n","Epoch 60/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5258.0415 - mae: 5258.0415\n","Epoch 61/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5131.7769 - mae: 5131.7769\n","Epoch 62/100\n","34/34 [==============================] - 0s 2ms/step - loss: 5000.8354 - mae: 5000.8354\n","Epoch 63/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4871.1245 - mae: 4871.1245\n","Epoch 64/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4737.7192 - mae: 4737.7192\n","Epoch 65/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4611.1768 - mae: 4611.1768\n","Epoch 66/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4487.7749 - mae: 4487.7749\n","Epoch 67/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4379.0918 - mae: 4379.0918\n","Epoch 68/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4273.1294 - mae: 4273.1294\n","Epoch 69/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4172.3823 - mae: 4172.3823\n","Epoch 70/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4080.6499 - mae: 4080.6499\n","Epoch 71/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3995.3870 - mae: 3995.3870\n","Epoch 72/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3922.2532 - mae: 3922.2532\n","Epoch 73/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3860.7217 - mae: 3860.7217\n","Epoch 74/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3808.8452 - mae: 3808.8452\n","Epoch 75/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3769.4849 - mae: 3769.4849\n","Epoch 76/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3741.0081 - mae: 3741.0081\n","Epoch 77/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3717.0215 - mae: 3717.0215\n","Epoch 78/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3701.0664 - mae: 3701.0664\n","Epoch 79/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3689.9880 - mae: 3689.9880\n","Epoch 80/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3681.0696 - mae: 3681.0696\n","Epoch 81/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3675.1487 - mae: 3675.1487\n","Epoch 82/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3672.2156 - mae: 3672.2156\n","Epoch 83/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3666.2637 - mae: 3666.2637\n","Epoch 84/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3662.9744 - mae: 3662.9744\n","Epoch 85/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3661.0232 - mae: 3661.0232\n","Epoch 86/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3659.6562 - mae: 3659.6562\n","Epoch 87/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3656.3940 - mae: 3656.3940\n","Epoch 88/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3653.8459 - mae: 3653.8459\n","Epoch 89/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3652.6523 - mae: 3652.6523\n","Epoch 90/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3650.8516 - mae: 3650.8516\n","Epoch 91/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3647.8503 - mae: 3647.8503\n","Epoch 92/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3647.2197 - mae: 3647.2197\n","Epoch 93/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3644.9653 - mae: 3644.9653\n","Epoch 94/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3643.2102 - mae: 3643.2102\n","Epoch 95/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3644.0083 - mae: 3644.0083\n","Epoch 96/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3641.2219 - mae: 3641.2219\n","Epoch 97/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3638.7751 - mae: 3638.7751\n","Epoch 98/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3636.6982 - mae: 3636.6982\n","Epoch 99/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3636.1448 - mae: 3636.1448\n","Epoch 100/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3634.4443 - mae: 3634.4443\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x78fc6339a290>"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["#evaluate insure model built on normalized data\n","insurance_model_4.evaluate(x_test_normal,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vmGHiGjYV1oA","executionInfo":{"status":"ok","timestamp":1704117980087,"user_tz":-330,"elapsed":667,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"d4ac2a2e-645a-47fa-d438-0ab080a9b7b1"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 1s 6ms/step - loss: 3436.8115 - mae: 3436.8115\n"]},{"output_type":"execute_result","data":{"text/plain":["[3436.8115234375, 3436.8115234375]"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["insurance_model_2.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YjiLmAH2Vebr","executionInfo":{"status":"ok","timestamp":1704117802428,"user_tz":-330,"elapsed":656,"user":{"displayName":"Vishvajeet Sutar","userId":"10325499493238005260"}},"outputId":"61bd3031-afcb-4ee2-b3f7-ce403ff7c308"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_8\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_12 (Dense)            (None, 100)               1200      \n","                                                                 \n"," dense_13 (Dense)            (None, 10)                1010      \n","                                                                 \n"," dense_14 (Dense)            (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 2221 (8.68 KB)\n","Trainable params: 2221 (8.68 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]}]}